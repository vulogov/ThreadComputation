// Code generated from ThreadComputation.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 275,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6,
	3, 6, 3, 7, 3, 7, 3, 8, 5, 8, 73, 10, 8, 3, 8, 6, 8, 76, 10, 8, 13, 8,
	14, 8, 77, 3, 9, 3, 9, 3, 10, 3, 10, 7, 10, 84, 10, 10, 12, 10, 14, 10,
	87, 11, 10, 3, 11, 5, 11, 90, 10, 11, 3, 11, 3, 11, 3, 12, 3, 12, 7, 12,
	96, 10, 12, 12, 12, 14, 12, 99, 11, 12, 3, 12, 6, 12, 102, 10, 12, 13,
	12, 14, 12, 103, 5, 12, 106, 10, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15,
	3, 15, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 16, 3, 16, 5, 16, 129, 10, 16, 3, 17, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3,
	17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 5, 17, 149, 10, 17, 3, 18, 3, 18,
	3, 18, 3, 18, 7, 18, 155, 10, 18, 12, 18, 14, 18, 158, 11, 18, 3, 18, 3,
	18, 3, 18, 3, 18, 3, 18, 3, 19, 6, 19, 166, 10, 19, 13, 19, 14, 19, 167,
	3, 19, 3, 19, 3, 20, 5, 20, 173, 10, 20, 3, 20, 3, 20, 5, 20, 177, 10,
	20, 3, 20, 3, 20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 5, 24,
	188, 10, 24, 3, 24, 6, 24, 191, 10, 24, 13, 24, 14, 24, 192, 3, 24, 5,
	24, 196, 10, 24, 3, 24, 3, 24, 5, 24, 200, 10, 24, 3, 24, 6, 24, 203, 10,
	24, 13, 24, 14, 24, 204, 3, 24, 5, 24, 208, 10, 24, 3, 24, 5, 24, 211,
	10, 24, 3, 25, 7, 25, 214, 10, 25, 12, 25, 14, 25, 217, 11, 25, 3, 25,
	3, 25, 6, 25, 221, 10, 25, 13, 25, 14, 25, 222, 3, 25, 6, 25, 226, 10,
	25, 13, 25, 14, 25, 227, 3, 25, 5, 25, 231, 10, 25, 3, 26, 5, 26, 234,
	10, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 27, 5, 27, 242, 10, 27, 3,
	27, 7, 27, 245, 10, 27, 12, 27, 14, 27, 248, 11, 27, 3, 27, 3, 27, 3, 27,
	3, 27, 3, 27, 5, 27, 255, 10, 27, 3, 27, 7, 27, 258, 10, 27, 12, 27, 14,
	27, 261, 11, 27, 3, 27, 5, 27, 264, 10, 27, 3, 28, 5, 28, 267, 10, 28,
	3, 28, 5, 28, 270, 10, 28, 3, 29, 3, 29, 5, 29, 274, 10, 29, 3, 156, 2,
	30, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12,
	23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21,
	41, 2, 43, 2, 45, 2, 47, 2, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 3, 2, 14,
	4, 2, 65, 65, 98, 98, 15, 2, 35, 35, 40, 40, 44, 47, 49, 49, 60, 64, 96,
	97, 126, 126, 128, 128, 217, 217, 249, 249, 8595, 8595, 8597, 8597, 8712,
	8713, 4, 2, 11, 11, 34, 34, 3, 2, 51, 59, 3, 2, 50, 59, 4, 2, 45, 45, 47,
	47, 4, 2, 71, 71, 103, 103, 6, 2, 12, 12, 15, 15, 41, 41, 94, 94, 6, 2,
	12, 12, 15, 15, 36, 36, 94, 94, 4, 2, 67, 92, 99, 124, 4, 2, 65, 65, 98,
	124, 4, 2, 48, 48, 50, 59, 2, 301, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2,
	2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2,
	2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2,
	2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3,
	2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37,
	3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 3, 59, 3, 2, 2, 2, 5, 61, 3, 2, 2, 2, 7,
	63, 3, 2, 2, 2, 9, 65, 3, 2, 2, 2, 11, 67, 3, 2, 2, 2, 13, 69, 3, 2, 2,
	2, 15, 72, 3, 2, 2, 2, 17, 79, 3, 2, 2, 2, 19, 81, 3, 2, 2, 2, 21, 89,
	3, 2, 2, 2, 23, 105, 3, 2, 2, 2, 25, 107, 3, 2, 2, 2, 27, 109, 3, 2, 2,
	2, 29, 111, 3, 2, 2, 2, 31, 128, 3, 2, 2, 2, 33, 148, 3, 2, 2, 2, 35, 150,
	3, 2, 2, 2, 37, 165, 3, 2, 2, 2, 39, 176, 3, 2, 2, 2, 41, 180, 3, 2, 2,
	2, 43, 182, 3, 2, 2, 2, 45, 184, 3, 2, 2, 2, 47, 210, 3, 2, 2, 2, 49, 230,
	3, 2, 2, 2, 51, 233, 3, 2, 2, 2, 53, 263, 3, 2, 2, 2, 55, 269, 3, 2, 2,
	2, 57, 273, 3, 2, 2, 2, 59, 60, 7, 93, 2, 2, 60, 4, 3, 2, 2, 2, 61, 62,
	7, 95, 2, 2, 62, 6, 3, 2, 2, 2, 63, 64, 7, 66, 2, 2, 64, 8, 3, 2, 2, 2,
	65, 66, 7, 38, 2, 2, 66, 10, 3, 2, 2, 2, 67, 68, 7, 42, 2, 2, 68, 12, 3,
	2, 2, 2, 69, 70, 7, 43, 2, 2, 70, 14, 3, 2, 2, 2, 71, 73, 5, 17, 9, 2,
	72, 71, 3, 2, 2, 2, 72, 73, 3, 2, 2, 2, 73, 75, 3, 2, 2, 2, 74, 76, 5,
	29, 15, 2, 75, 74, 3, 2, 2, 2, 76, 77, 3, 2, 2, 2, 77, 75, 3, 2, 2, 2,
	77, 78, 3, 2, 2, 2, 78, 16, 3, 2, 2, 2, 79, 80, 9, 2, 2, 2, 80, 18, 3,
	2, 2, 2, 81, 85, 5, 55, 28, 2, 82, 84, 5, 57, 29, 2, 83, 82, 3, 2, 2, 2,
	84, 87, 3, 2, 2, 2, 85, 83, 3, 2, 2, 2, 85, 86, 3, 2, 2, 2, 86, 20, 3,
	2, 2, 2, 87, 85, 3, 2, 2, 2, 88, 90, 5, 45, 23, 2, 89, 88, 3, 2, 2, 2,
	89, 90, 3, 2, 2, 2, 90, 91, 3, 2, 2, 2, 91, 92, 5, 23, 12, 2, 92, 22, 3,
	2, 2, 2, 93, 97, 5, 41, 21, 2, 94, 96, 5, 43, 22, 2, 95, 94, 3, 2, 2, 2,
	96, 99, 3, 2, 2, 2, 97, 95, 3, 2, 2, 2, 97, 98, 3, 2, 2, 2, 98, 106, 3,
	2, 2, 2, 99, 97, 3, 2, 2, 2, 100, 102, 7, 50, 2, 2, 101, 100, 3, 2, 2,
	2, 102, 103, 3, 2, 2, 2, 103, 101, 3, 2, 2, 2, 103, 104, 3, 2, 2, 2, 104,
	106, 3, 2, 2, 2, 105, 93, 3, 2, 2, 2, 105, 101, 3, 2, 2, 2, 106, 24, 3,
	2, 2, 2, 107, 108, 5, 47, 24, 2, 108, 26, 3, 2, 2, 2, 109, 110, 5, 53,
	27, 2, 110, 28, 3, 2, 2, 2, 111, 112, 9, 3, 2, 2, 112, 30, 3, 2, 2, 2,
	113, 114, 7, 37, 2, 2, 114, 115, 7, 118, 2, 2, 115, 116, 7, 116, 2, 2,
	116, 117, 7, 119, 2, 2, 117, 129, 7, 103, 2, 2, 118, 119, 7, 37, 2, 2,
	119, 120, 7, 86, 2, 2, 120, 121, 7, 116, 2, 2, 121, 122, 7, 119, 2, 2,
	122, 129, 7, 103, 2, 2, 123, 124, 7, 37, 2, 2, 124, 125, 7, 86, 2, 2, 125,
	126, 7, 84, 2, 2, 126, 127, 7, 87, 2, 2, 127, 129, 7, 71, 2, 2, 128, 113,
	3, 2, 2, 2, 128, 118, 3, 2, 2, 2, 128, 123, 3, 2, 2, 2, 129, 32, 3, 2,
	2, 2, 130, 131, 7, 37, 2, 2, 131, 132, 7, 104, 2, 2, 132, 133, 7, 99, 2,
	2, 133, 134, 7, 110, 2, 2, 134, 135, 7, 117, 2, 2, 135, 149, 7, 103, 2,
	2, 136, 137, 7, 37, 2, 2, 137, 138, 7, 72, 2, 2, 138, 139, 7, 99, 2, 2,
	139, 140, 7, 110, 2, 2, 140, 141, 7, 117, 2, 2, 141, 149, 7, 103, 2, 2,
	142, 143, 7, 37, 2, 2, 143, 144, 7, 72, 2, 2, 144, 145, 7, 67, 2, 2, 145,
	146, 7, 78, 2, 2, 146, 147, 7, 85, 2, 2, 147, 149, 7, 71, 2, 2, 148, 130,
	3, 2, 2, 2, 148, 136, 3, 2, 2, 2, 148, 142, 3, 2, 2, 2, 149, 34, 3, 2,
	2, 2, 150, 151, 7, 49, 2, 2, 151, 152, 7, 44, 2, 2, 152, 156, 3, 2, 2,
	2, 153, 155, 11, 2, 2, 2, 154, 153, 3, 2, 2, 2, 155, 158, 3, 2, 2, 2, 156,
	157, 3, 2, 2, 2, 156, 154, 3, 2, 2, 2, 157, 159, 3, 2, 2, 2, 158, 156,
	3, 2, 2, 2, 159, 160, 7, 44, 2, 2, 160, 161, 7, 49, 2, 2, 161, 162, 3,
	2, 2, 2, 162, 163, 8, 18, 2, 2, 163, 36, 3, 2, 2, 2, 164, 166, 9, 4, 2,
	2, 165, 164, 3, 2, 2, 2, 166, 167, 3, 2, 2, 2, 167, 165, 3, 2, 2, 2, 167,
	168, 3, 2, 2, 2, 168, 169, 3, 2, 2, 2, 169, 170, 8, 19, 2, 2, 170, 38,
	3, 2, 2, 2, 171, 173, 7, 15, 2, 2, 172, 171, 3, 2, 2, 2, 172, 173, 3, 2,
	2, 2, 173, 174, 3, 2, 2, 2, 174, 177, 7, 12, 2, 2, 175, 177, 7, 15, 2,
	2, 176, 172, 3, 2, 2, 2, 176, 175, 3, 2, 2, 2, 177, 178, 3, 2, 2, 2, 178,
	179, 8, 20, 2, 2, 179, 40, 3, 2, 2, 2, 180, 181, 9, 5, 2, 2, 181, 42, 3,
	2, 2, 2, 182, 183, 9, 6, 2, 2, 183, 44, 3, 2, 2, 2, 184, 185, 9, 7, 2,
	2, 185, 46, 3, 2, 2, 2, 186, 188, 5, 45, 23, 2, 187, 186, 3, 2, 2, 2, 187,
	188, 3, 2, 2, 2, 188, 195, 3, 2, 2, 2, 189, 191, 9, 6, 2, 2, 190, 189,
	3, 2, 2, 2, 191, 192, 3, 2, 2, 2, 192, 190, 3, 2, 2, 2, 192, 193, 3, 2,
	2, 2, 193, 196, 3, 2, 2, 2, 194, 196, 5, 49, 25, 2, 195, 190, 3, 2, 2,
	2, 195, 194, 3, 2, 2, 2, 196, 197, 3, 2, 2, 2, 197, 199, 9, 8, 2, 2, 198,
	200, 9, 7, 2, 2, 199, 198, 3, 2, 2, 2, 199, 200, 3, 2, 2, 2, 200, 202,
	3, 2, 2, 2, 201, 203, 9, 6, 2, 2, 202, 201, 3, 2, 2, 2, 203, 204, 3, 2,
	2, 2, 204, 202, 3, 2, 2, 2, 204, 205, 3, 2, 2, 2, 205, 211, 3, 2, 2, 2,
	206, 208, 5, 45, 23, 2, 207, 206, 3, 2, 2, 2, 207, 208, 3, 2, 2, 2, 208,
	209, 3, 2, 2, 2, 209, 211, 5, 49, 25, 2, 210, 187, 3, 2, 2, 2, 210, 207,
	3, 2, 2, 2, 211, 48, 3, 2, 2, 2, 212, 214, 9, 6, 2, 2, 213, 212, 3, 2,
	2, 2, 214, 217, 3, 2, 2, 2, 215, 213, 3, 2, 2, 2, 215, 216, 3, 2, 2, 2,
	216, 218, 3, 2, 2, 2, 217, 215, 3, 2, 2, 2, 218, 220, 7, 48, 2, 2, 219,
	221, 9, 6, 2, 2, 220, 219, 3, 2, 2, 2, 221, 222, 3, 2, 2, 2, 222, 220,
	3, 2, 2, 2, 222, 223, 3, 2, 2, 2, 223, 231, 3, 2, 2, 2, 224, 226, 9, 6,
	2, 2, 225, 224, 3, 2, 2, 2, 226, 227, 3, 2, 2, 2, 227, 225, 3, 2, 2, 2,
	227, 228, 3, 2, 2, 2, 228, 229, 3, 2, 2, 2, 229, 231, 7, 48, 2, 2, 230,
	215, 3, 2, 2, 2, 230, 225, 3, 2, 2, 2, 231, 50, 3, 2, 2, 2, 232, 234, 7,
	15, 2, 2, 233, 232, 3, 2, 2, 2, 233, 234, 3, 2, 2, 2, 234, 235, 3, 2, 2,
	2, 235, 236, 7, 12, 2, 2, 236, 52, 3, 2, 2, 2, 237, 246, 7, 41, 2, 2, 238,
	241, 7, 94, 2, 2, 239, 242, 5, 51, 26, 2, 240, 242, 11, 2, 2, 2, 241, 239,
	3, 2, 2, 2, 241, 240, 3, 2, 2, 2, 242, 245, 3, 2, 2, 2, 243, 245, 10, 9,
	2, 2, 244, 238, 3, 2, 2, 2, 244, 243, 3, 2, 2, 2, 245, 248, 3, 2, 2, 2,
	246, 244, 3, 2, 2, 2, 246, 247, 3, 2, 2, 2, 247, 249, 3, 2, 2, 2, 248,
	246, 3, 2, 2, 2, 249, 264, 7, 41, 2, 2, 250, 259, 7, 36, 2, 2, 251, 254,
	7, 94, 2, 2, 252, 255, 5, 51, 26, 2, 253, 255, 11, 2, 2, 2, 254, 252, 3,
	2, 2, 2, 254, 253, 3, 2, 2, 2, 255, 258, 3, 2, 2, 2, 256, 258, 10, 10,
	2, 2, 257, 251, 3, 2, 2, 2, 257, 256, 3, 2, 2, 2, 258, 261, 3, 2, 2, 2,
	259, 257, 3, 2, 2, 2, 259, 260, 3, 2, 2, 2, 260, 262, 3, 2, 2, 2, 261,
	259, 3, 2, 2, 2, 262, 264, 7, 36, 2, 2, 263, 237, 3, 2, 2, 2, 263, 250,
	3, 2, 2, 2, 264, 54, 3, 2, 2, 2, 265, 267, 9, 11, 2, 2, 266, 265, 3, 2,
	2, 2, 267, 270, 3, 2, 2, 2, 268, 270, 9, 12, 2, 2, 269, 266, 3, 2, 2, 2,
	269, 268, 3, 2, 2, 2, 270, 56, 3, 2, 2, 2, 271, 274, 5, 55, 28, 2, 272,
	274, 9, 13, 2, 2, 273, 271, 3, 2, 2, 2, 273, 272, 3, 2, 2, 2, 274, 58,
	3, 2, 2, 2, 38, 2, 72, 77, 85, 89, 97, 103, 105, 128, 148, 156, 167, 172,
	176, 187, 192, 195, 199, 204, 207, 210, 215, 222, 227, 230, 233, 241, 244,
	246, 254, 257, 259, 263, 266, 269, 273, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'@'", "'$'", "'('", "')'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "OPS", "OPS_START", "NAME", "INTEGER", "DECIMAL_INTEGER",
	"FLOAT_NUMBER", "STRING", "OP", "TRUE", "FALSE", "BLOCK_COMMENT", "WhiteSpace",
	"NewLine",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "OPS", "OPS_START", "NAME",
	"INTEGER", "DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING", "OP", "TRUE", "FALSE",
	"BLOCK_COMMENT", "WhiteSpace", "NewLine", "NON_ZERO_DIGIT", "DIGIT", "SIGN",
	"EXPONENT_OR_POINT_FLOAT", "POINT_FLOAT", "RN", "SHORT_STRING", "ID_START",
	"ID_CONTINUE",
}

type ThreadComputationLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewThreadComputationLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ThreadComputationLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewThreadComputationLexer(input antlr.CharStream) *ThreadComputationLexer {
	l := new(ThreadComputationLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ThreadComputation.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ThreadComputationLexer tokens.
const (
	ThreadComputationLexerT__0            = 1
	ThreadComputationLexerT__1            = 2
	ThreadComputationLexerT__2            = 3
	ThreadComputationLexerT__3            = 4
	ThreadComputationLexerT__4            = 5
	ThreadComputationLexerT__5            = 6
	ThreadComputationLexerOPS             = 7
	ThreadComputationLexerOPS_START       = 8
	ThreadComputationLexerNAME            = 9
	ThreadComputationLexerINTEGER         = 10
	ThreadComputationLexerDECIMAL_INTEGER = 11
	ThreadComputationLexerFLOAT_NUMBER    = 12
	ThreadComputationLexerSTRING          = 13
	ThreadComputationLexerOP              = 14
	ThreadComputationLexerTRUE            = 15
	ThreadComputationLexerFALSE           = 16
	ThreadComputationLexerBLOCK_COMMENT   = 17
	ThreadComputationLexerWhiteSpace      = 18
	ThreadComputationLexerNewLine         = 19
)
