// Code generated from ThreadComputation.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 30, 337,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 4, 35, 9, 35, 4, 36, 9, 36, 4, 37, 9, 37, 4, 38, 9, 38, 3,
	2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3,
	8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3,
	12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13, 3, 13,
	3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3,
	16, 3, 17, 5, 17, 135, 10, 17, 3, 17, 6, 17, 138, 10, 17, 13, 17, 14, 17,
	139, 3, 18, 3, 18, 3, 19, 3, 19, 7, 19, 146, 10, 19, 12, 19, 14, 19, 149,
	11, 19, 3, 20, 5, 20, 152, 10, 20, 3, 20, 3, 20, 3, 21, 3, 21, 7, 21, 158,
	10, 21, 12, 21, 14, 21, 161, 11, 21, 3, 21, 6, 21, 164, 10, 21, 13, 21,
	14, 21, 165, 5, 21, 168, 10, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 3,
	24, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 25, 3, 25, 3, 25, 5, 25, 191, 10, 25, 3, 26, 3, 26, 3,
	26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 3, 26,
	3, 26, 3, 26, 3, 26, 3, 26, 3, 26, 5, 26, 211, 10, 26, 3, 27, 3, 27, 3,
	27, 3, 27, 7, 27, 217, 10, 27, 12, 27, 14, 27, 220, 11, 27, 3, 27, 3, 27,
	3, 27, 3, 27, 3, 27, 3, 28, 6, 28, 228, 10, 28, 13, 28, 14, 28, 229, 3,
	28, 3, 28, 3, 29, 5, 29, 235, 10, 29, 3, 29, 3, 29, 5, 29, 239, 10, 29,
	3, 29, 3, 29, 3, 30, 3, 30, 3, 31, 3, 31, 3, 32, 3, 32, 3, 33, 5, 33, 250,
	10, 33, 3, 33, 6, 33, 253, 10, 33, 13, 33, 14, 33, 254, 3, 33, 5, 33, 258,
	10, 33, 3, 33, 3, 33, 5, 33, 262, 10, 33, 3, 33, 6, 33, 265, 10, 33, 13,
	33, 14, 33, 266, 3, 33, 5, 33, 270, 10, 33, 3, 33, 5, 33, 273, 10, 33,
	3, 34, 7, 34, 276, 10, 34, 12, 34, 14, 34, 279, 11, 34, 3, 34, 3, 34, 6,
	34, 283, 10, 34, 13, 34, 14, 34, 284, 3, 34, 6, 34, 288, 10, 34, 13, 34,
	14, 34, 289, 3, 34, 5, 34, 293, 10, 34, 3, 35, 5, 35, 296, 10, 35, 3, 35,
	3, 35, 3, 36, 3, 36, 3, 36, 3, 36, 5, 36, 304, 10, 36, 3, 36, 7, 36, 307,
	10, 36, 12, 36, 14, 36, 310, 11, 36, 3, 36, 3, 36, 3, 36, 3, 36, 3, 36,
	5, 36, 317, 10, 36, 3, 36, 7, 36, 320, 10, 36, 12, 36, 14, 36, 323, 11,
	36, 3, 36, 5, 36, 326, 10, 36, 3, 37, 5, 37, 329, 10, 37, 3, 37, 5, 37,
	332, 10, 37, 3, 38, 3, 38, 5, 38, 336, 10, 38, 3, 218, 2, 39, 3, 3, 5,
	4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25,
	14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43,
	23, 45, 24, 47, 25, 49, 26, 51, 27, 53, 28, 55, 29, 57, 30, 59, 2, 61,
	2, 63, 2, 65, 2, 67, 2, 69, 2, 71, 2, 73, 2, 75, 2, 3, 2, 14, 4, 2, 65,
	65, 98, 98, 17, 2, 35, 35, 40, 40, 44, 47, 49, 49, 61, 64, 96, 97, 126,
	126, 128, 128, 174, 174, 217, 217, 249, 249, 8595, 8595, 8597, 8597, 8712,
	8713, 8745, 8746, 4, 2, 11, 11, 34, 34, 3, 2, 51, 59, 3, 2, 50, 59, 4,
	2, 45, 45, 47, 47, 4, 2, 71, 71, 103, 103, 6, 2, 12, 12, 15, 15, 41, 41,
	94, 94, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4, 2, 67, 92, 99, 124, 4,
	2, 65, 65, 98, 124, 4, 2, 48, 48, 50, 59, 2, 363, 2, 3, 3, 2, 2, 2, 2,
	5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2,
	13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2,
	2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2,
	2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2,
	2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3,
	2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2, 2, 2, 2, 51,
	3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3, 2, 2, 2, 3,
	77, 3, 2, 2, 2, 5, 79, 3, 2, 2, 2, 7, 81, 3, 2, 2, 2, 9, 83, 3, 2, 2, 2,
	11, 85, 3, 2, 2, 2, 13, 87, 3, 2, 2, 2, 15, 89, 3, 2, 2, 2, 17, 91, 3,
	2, 2, 2, 19, 99, 3, 2, 2, 2, 21, 101, 3, 2, 2, 2, 23, 107, 3, 2, 2, 2,
	25, 114, 3, 2, 2, 2, 27, 122, 3, 2, 2, 2, 29, 129, 3, 2, 2, 2, 31, 131,
	3, 2, 2, 2, 33, 134, 3, 2, 2, 2, 35, 141, 3, 2, 2, 2, 37, 143, 3, 2, 2,
	2, 39, 151, 3, 2, 2, 2, 41, 167, 3, 2, 2, 2, 43, 169, 3, 2, 2, 2, 45, 171,
	3, 2, 2, 2, 47, 173, 3, 2, 2, 2, 49, 190, 3, 2, 2, 2, 51, 210, 3, 2, 2,
	2, 53, 212, 3, 2, 2, 2, 55, 227, 3, 2, 2, 2, 57, 238, 3, 2, 2, 2, 59, 242,
	3, 2, 2, 2, 61, 244, 3, 2, 2, 2, 63, 246, 3, 2, 2, 2, 65, 272, 3, 2, 2,
	2, 67, 292, 3, 2, 2, 2, 69, 295, 3, 2, 2, 2, 71, 325, 3, 2, 2, 2, 73, 331,
	3, 2, 2, 2, 75, 335, 3, 2, 2, 2, 77, 78, 7, 93, 2, 2, 78, 4, 3, 2, 2, 2,
	79, 80, 7, 95, 2, 2, 80, 6, 3, 2, 2, 2, 81, 82, 7, 66, 2, 2, 82, 8, 3,
	2, 2, 2, 83, 84, 7, 38, 2, 2, 84, 10, 3, 2, 2, 2, 85, 86, 7, 60, 2, 2,
	86, 12, 3, 2, 2, 2, 87, 88, 7, 42, 2, 2, 88, 14, 3, 2, 2, 2, 89, 90, 7,
	43, 2, 2, 90, 16, 3, 2, 2, 2, 91, 92, 7, 110, 2, 2, 92, 93, 7, 99, 2, 2,
	93, 94, 7, 111, 2, 2, 94, 95, 7, 100, 2, 2, 95, 96, 7, 102, 2, 2, 96, 97,
	7, 99, 2, 2, 97, 98, 7, 94, 2, 2, 98, 18, 3, 2, 2, 2, 99, 100, 7, 94, 2,
	2, 100, 20, 3, 2, 2, 2, 101, 102, 7, 118, 2, 2, 102, 103, 7, 116, 2, 2,
	103, 104, 7, 119, 2, 2, 104, 105, 7, 103, 2, 2, 105, 106, 7, 94, 2, 2,
	106, 22, 3, 2, 2, 2, 107, 108, 7, 104, 2, 2, 108, 109, 7, 99, 2, 2, 109,
	110, 7, 110, 2, 2, 110, 111, 7, 117, 2, 2, 111, 112, 7, 103, 2, 2, 112,
	113, 7, 94, 2, 2, 113, 24, 3, 2, 2, 2, 114, 115, 7, 104, 2, 2, 115, 116,
	7, 107, 2, 2, 116, 117, 7, 110, 2, 2, 117, 118, 7, 118, 2, 2, 118, 119,
	7, 103, 2, 2, 119, 120, 7, 116, 2, 2, 120, 121, 7, 94, 2, 2, 121, 26, 3,
	2, 2, 2, 122, 123, 7, 117, 2, 2, 123, 124, 7, 114, 2, 2, 124, 125, 7, 99,
	2, 2, 125, 126, 7, 121, 2, 2, 126, 127, 7, 112, 2, 2, 127, 128, 7, 94,
	2, 2, 128, 28, 3, 2, 2, 2, 129, 130, 7, 125, 2, 2, 130, 30, 3, 2, 2, 2,
	131, 132, 7, 127, 2, 2, 132, 32, 3, 2, 2, 2, 133, 135, 5, 35, 18, 2, 134,
	133, 3, 2, 2, 2, 134, 135, 3, 2, 2, 2, 135, 137, 3, 2, 2, 2, 136, 138,
	5, 47, 24, 2, 137, 136, 3, 2, 2, 2, 138, 139, 3, 2, 2, 2, 139, 137, 3,
	2, 2, 2, 139, 140, 3, 2, 2, 2, 140, 34, 3, 2, 2, 2, 141, 142, 9, 2, 2,
	2, 142, 36, 3, 2, 2, 2, 143, 147, 5, 73, 37, 2, 144, 146, 5, 75, 38, 2,
	145, 144, 3, 2, 2, 2, 146, 149, 3, 2, 2, 2, 147, 145, 3, 2, 2, 2, 147,
	148, 3, 2, 2, 2, 148, 38, 3, 2, 2, 2, 149, 147, 3, 2, 2, 2, 150, 152, 5,
	63, 32, 2, 151, 150, 3, 2, 2, 2, 151, 152, 3, 2, 2, 2, 152, 153, 3, 2,
	2, 2, 153, 154, 5, 41, 21, 2, 154, 40, 3, 2, 2, 2, 155, 159, 5, 59, 30,
	2, 156, 158, 5, 61, 31, 2, 157, 156, 3, 2, 2, 2, 158, 161, 3, 2, 2, 2,
	159, 157, 3, 2, 2, 2, 159, 160, 3, 2, 2, 2, 160, 168, 3, 2, 2, 2, 161,
	159, 3, 2, 2, 2, 162, 164, 7, 50, 2, 2, 163, 162, 3, 2, 2, 2, 164, 165,
	3, 2, 2, 2, 165, 163, 3, 2, 2, 2, 165, 166, 3, 2, 2, 2, 166, 168, 3, 2,
	2, 2, 167, 155, 3, 2, 2, 2, 167, 163, 3, 2, 2, 2, 168, 42, 3, 2, 2, 2,
	169, 170, 5, 65, 33, 2, 170, 44, 3, 2, 2, 2, 171, 172, 5, 71, 36, 2, 172,
	46, 3, 2, 2, 2, 173, 174, 9, 3, 2, 2, 174, 48, 3, 2, 2, 2, 175, 176, 7,
	37, 2, 2, 176, 177, 7, 118, 2, 2, 177, 178, 7, 116, 2, 2, 178, 179, 7,
	119, 2, 2, 179, 191, 7, 103, 2, 2, 180, 181, 7, 37, 2, 2, 181, 182, 7,
	86, 2, 2, 182, 183, 7, 116, 2, 2, 183, 184, 7, 119, 2, 2, 184, 191, 7,
	103, 2, 2, 185, 186, 7, 37, 2, 2, 186, 187, 7, 86, 2, 2, 187, 188, 7, 84,
	2, 2, 188, 189, 7, 87, 2, 2, 189, 191, 7, 71, 2, 2, 190, 175, 3, 2, 2,
	2, 190, 180, 3, 2, 2, 2, 190, 185, 3, 2, 2, 2, 191, 50, 3, 2, 2, 2, 192,
	193, 7, 37, 2, 2, 193, 194, 7, 104, 2, 2, 194, 195, 7, 99, 2, 2, 195, 196,
	7, 110, 2, 2, 196, 197, 7, 117, 2, 2, 197, 211, 7, 103, 2, 2, 198, 199,
	7, 37, 2, 2, 199, 200, 7, 72, 2, 2, 200, 201, 7, 99, 2, 2, 201, 202, 7,
	110, 2, 2, 202, 203, 7, 117, 2, 2, 203, 211, 7, 103, 2, 2, 204, 205, 7,
	37, 2, 2, 205, 206, 7, 72, 2, 2, 206, 207, 7, 67, 2, 2, 207, 208, 7, 78,
	2, 2, 208, 209, 7, 85, 2, 2, 209, 211, 7, 71, 2, 2, 210, 192, 3, 2, 2,
	2, 210, 198, 3, 2, 2, 2, 210, 204, 3, 2, 2, 2, 211, 52, 3, 2, 2, 2, 212,
	213, 7, 49, 2, 2, 213, 214, 7, 44, 2, 2, 214, 218, 3, 2, 2, 2, 215, 217,
	11, 2, 2, 2, 216, 215, 3, 2, 2, 2, 217, 220, 3, 2, 2, 2, 218, 219, 3, 2,
	2, 2, 218, 216, 3, 2, 2, 2, 219, 221, 3, 2, 2, 2, 220, 218, 3, 2, 2, 2,
	221, 222, 7, 44, 2, 2, 222, 223, 7, 49, 2, 2, 223, 224, 3, 2, 2, 2, 224,
	225, 8, 27, 2, 2, 225, 54, 3, 2, 2, 2, 226, 228, 9, 4, 2, 2, 227, 226,
	3, 2, 2, 2, 228, 229, 3, 2, 2, 2, 229, 227, 3, 2, 2, 2, 229, 230, 3, 2,
	2, 2, 230, 231, 3, 2, 2, 2, 231, 232, 8, 28, 2, 2, 232, 56, 3, 2, 2, 2,
	233, 235, 7, 15, 2, 2, 234, 233, 3, 2, 2, 2, 234, 235, 3, 2, 2, 2, 235,
	236, 3, 2, 2, 2, 236, 239, 7, 12, 2, 2, 237, 239, 7, 15, 2, 2, 238, 234,
	3, 2, 2, 2, 238, 237, 3, 2, 2, 2, 239, 240, 3, 2, 2, 2, 240, 241, 8, 29,
	2, 2, 241, 58, 3, 2, 2, 2, 242, 243, 9, 5, 2, 2, 243, 60, 3, 2, 2, 2, 244,
	245, 9, 6, 2, 2, 245, 62, 3, 2, 2, 2, 246, 247, 9, 7, 2, 2, 247, 64, 3,
	2, 2, 2, 248, 250, 5, 63, 32, 2, 249, 248, 3, 2, 2, 2, 249, 250, 3, 2,
	2, 2, 250, 257, 3, 2, 2, 2, 251, 253, 9, 6, 2, 2, 252, 251, 3, 2, 2, 2,
	253, 254, 3, 2, 2, 2, 254, 252, 3, 2, 2, 2, 254, 255, 3, 2, 2, 2, 255,
	258, 3, 2, 2, 2, 256, 258, 5, 67, 34, 2, 257, 252, 3, 2, 2, 2, 257, 256,
	3, 2, 2, 2, 258, 259, 3, 2, 2, 2, 259, 261, 9, 8, 2, 2, 260, 262, 9, 7,
	2, 2, 261, 260, 3, 2, 2, 2, 261, 262, 3, 2, 2, 2, 262, 264, 3, 2, 2, 2,
	263, 265, 9, 6, 2, 2, 264, 263, 3, 2, 2, 2, 265, 266, 3, 2, 2, 2, 266,
	264, 3, 2, 2, 2, 266, 267, 3, 2, 2, 2, 267, 273, 3, 2, 2, 2, 268, 270,
	5, 63, 32, 2, 269, 268, 3, 2, 2, 2, 269, 270, 3, 2, 2, 2, 270, 271, 3,
	2, 2, 2, 271, 273, 5, 67, 34, 2, 272, 249, 3, 2, 2, 2, 272, 269, 3, 2,
	2, 2, 273, 66, 3, 2, 2, 2, 274, 276, 9, 6, 2, 2, 275, 274, 3, 2, 2, 2,
	276, 279, 3, 2, 2, 2, 277, 275, 3, 2, 2, 2, 277, 278, 3, 2, 2, 2, 278,
	280, 3, 2, 2, 2, 279, 277, 3, 2, 2, 2, 280, 282, 7, 48, 2, 2, 281, 283,
	9, 6, 2, 2, 282, 281, 3, 2, 2, 2, 283, 284, 3, 2, 2, 2, 284, 282, 3, 2,
	2, 2, 284, 285, 3, 2, 2, 2, 285, 293, 3, 2, 2, 2, 286, 288, 9, 6, 2, 2,
	287, 286, 3, 2, 2, 2, 288, 289, 3, 2, 2, 2, 289, 287, 3, 2, 2, 2, 289,
	290, 3, 2, 2, 2, 290, 291, 3, 2, 2, 2, 291, 293, 7, 48, 2, 2, 292, 277,
	3, 2, 2, 2, 292, 287, 3, 2, 2, 2, 293, 68, 3, 2, 2, 2, 294, 296, 7, 15,
	2, 2, 295, 294, 3, 2, 2, 2, 295, 296, 3, 2, 2, 2, 296, 297, 3, 2, 2, 2,
	297, 298, 7, 12, 2, 2, 298, 70, 3, 2, 2, 2, 299, 308, 7, 41, 2, 2, 300,
	303, 7, 94, 2, 2, 301, 304, 5, 69, 35, 2, 302, 304, 11, 2, 2, 2, 303, 301,
	3, 2, 2, 2, 303, 302, 3, 2, 2, 2, 304, 307, 3, 2, 2, 2, 305, 307, 10, 9,
	2, 2, 306, 300, 3, 2, 2, 2, 306, 305, 3, 2, 2, 2, 307, 310, 3, 2, 2, 2,
	308, 306, 3, 2, 2, 2, 308, 309, 3, 2, 2, 2, 309, 311, 3, 2, 2, 2, 310,
	308, 3, 2, 2, 2, 311, 326, 7, 41, 2, 2, 312, 321, 7, 36, 2, 2, 313, 316,
	7, 94, 2, 2, 314, 317, 5, 69, 35, 2, 315, 317, 11, 2, 2, 2, 316, 314, 3,
	2, 2, 2, 316, 315, 3, 2, 2, 2, 317, 320, 3, 2, 2, 2, 318, 320, 10, 10,
	2, 2, 319, 313, 3, 2, 2, 2, 319, 318, 3, 2, 2, 2, 320, 323, 3, 2, 2, 2,
	321, 319, 3, 2, 2, 2, 321, 322, 3, 2, 2, 2, 322, 324, 3, 2, 2, 2, 323,
	321, 3, 2, 2, 2, 324, 326, 7, 36, 2, 2, 325, 299, 3, 2, 2, 2, 325, 312,
	3, 2, 2, 2, 326, 72, 3, 2, 2, 2, 327, 329, 9, 11, 2, 2, 328, 327, 3, 2,
	2, 2, 329, 332, 3, 2, 2, 2, 330, 332, 9, 12, 2, 2, 331, 328, 3, 2, 2, 2,
	331, 330, 3, 2, 2, 2, 332, 74, 3, 2, 2, 2, 333, 336, 5, 73, 37, 2, 334,
	336, 9, 13, 2, 2, 335, 333, 3, 2, 2, 2, 335, 334, 3, 2, 2, 2, 336, 76,
	3, 2, 2, 2, 38, 2, 134, 139, 147, 151, 159, 165, 167, 190, 210, 218, 229,
	234, 238, 249, 254, 257, 261, 266, 269, 272, 277, 284, 289, 292, 295, 303,
	306, 308, 316, 319, 321, 325, 328, 331, 335, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'@'", "'$'", "':'", "'('", "')'", "'lambda\\'", "'\\'",
	"'true\\'", "'false\\'", "'filter\\'", "'spawn\\'", "'{'", "'}'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "OPS",
	"OPS_START", "NAME", "INTEGER", "DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING",
	"OP", "TRUE", "FALSE", "BLOCK_COMMENT", "WhiteSpace", "NewLine",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "OPS", "OPS_START",
	"NAME", "INTEGER", "DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING", "OP", "TRUE",
	"FALSE", "BLOCK_COMMENT", "WhiteSpace", "NewLine", "NON_ZERO_DIGIT", "DIGIT",
	"SIGN", "EXPONENT_OR_POINT_FLOAT", "POINT_FLOAT", "RN", "SHORT_STRING",
	"ID_START", "ID_CONTINUE",
}

type ThreadComputationLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewThreadComputationLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ThreadComputationLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewThreadComputationLexer(input antlr.CharStream) *ThreadComputationLexer {
	l := new(ThreadComputationLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ThreadComputation.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ThreadComputationLexer tokens.
const (
	ThreadComputationLexerT__0            = 1
	ThreadComputationLexerT__1            = 2
	ThreadComputationLexerT__2            = 3
	ThreadComputationLexerT__3            = 4
	ThreadComputationLexerT__4            = 5
	ThreadComputationLexerT__5            = 6
	ThreadComputationLexerT__6            = 7
	ThreadComputationLexerT__7            = 8
	ThreadComputationLexerT__8            = 9
	ThreadComputationLexerT__9            = 10
	ThreadComputationLexerT__10           = 11
	ThreadComputationLexerT__11           = 12
	ThreadComputationLexerT__12           = 13
	ThreadComputationLexerT__13           = 14
	ThreadComputationLexerT__14           = 15
	ThreadComputationLexerOPS             = 16
	ThreadComputationLexerOPS_START       = 17
	ThreadComputationLexerNAME            = 18
	ThreadComputationLexerINTEGER         = 19
	ThreadComputationLexerDECIMAL_INTEGER = 20
	ThreadComputationLexerFLOAT_NUMBER    = 21
	ThreadComputationLexerSTRING          = 22
	ThreadComputationLexerOP              = 23
	ThreadComputationLexerTRUE            = 24
	ThreadComputationLexerFALSE           = 25
	ThreadComputationLexerBLOCK_COMMENT   = 26
	ThreadComputationLexerWhiteSpace      = 27
	ThreadComputationLexerNewLine         = 28
)
