// Code generated from ThreadComputation.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 21, 244,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6,
	3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 9, 3, 9, 3, 9, 5, 9, 79, 10,
	9, 3, 10, 6, 10, 82, 10, 10, 13, 10, 14, 10, 83, 3, 11, 3, 11, 7, 11, 88,
	10, 11, 12, 11, 14, 11, 91, 11, 11, 3, 12, 5, 12, 94, 10, 12, 3, 12, 3,
	12, 3, 13, 3, 13, 7, 13, 100, 10, 13, 12, 13, 14, 13, 103, 11, 13, 3, 13,
	6, 13, 106, 10, 13, 13, 13, 14, 13, 107, 5, 13, 110, 10, 13, 3, 14, 3,
	14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18,
	7, 18, 124, 10, 18, 12, 18, 14, 18, 127, 11, 18, 3, 18, 3, 18, 3, 18, 3,
	18, 3, 18, 3, 19, 6, 19, 135, 10, 19, 13, 19, 14, 19, 136, 3, 19, 3, 19,
	3, 20, 5, 20, 142, 10, 20, 3, 20, 3, 20, 5, 20, 146, 10, 20, 3, 20, 3,
	20, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3, 24, 5, 24, 157, 10, 24,
	3, 24, 6, 24, 160, 10, 24, 13, 24, 14, 24, 161, 3, 24, 5, 24, 165, 10,
	24, 3, 24, 3, 24, 5, 24, 169, 10, 24, 3, 24, 6, 24, 172, 10, 24, 13, 24,
	14, 24, 173, 3, 24, 5, 24, 177, 10, 24, 3, 24, 5, 24, 180, 10, 24, 3, 25,
	7, 25, 183, 10, 25, 12, 25, 14, 25, 186, 11, 25, 3, 25, 3, 25, 6, 25, 190,
	10, 25, 13, 25, 14, 25, 191, 3, 25, 6, 25, 195, 10, 25, 13, 25, 14, 25,
	196, 3, 25, 5, 25, 200, 10, 25, 3, 26, 5, 26, 203, 10, 26, 3, 26, 3, 26,
	3, 27, 3, 27, 3, 27, 3, 27, 5, 27, 211, 10, 27, 3, 27, 7, 27, 214, 10,
	27, 12, 27, 14, 27, 217, 11, 27, 3, 27, 3, 27, 3, 27, 3, 27, 3, 27, 5,
	27, 224, 10, 27, 3, 27, 7, 27, 227, 10, 27, 12, 27, 14, 27, 230, 11, 27,
	3, 27, 5, 27, 233, 10, 27, 3, 28, 5, 28, 236, 10, 28, 3, 28, 5, 28, 239,
	10, 28, 3, 29, 3, 29, 5, 29, 243, 10, 29, 3, 125, 2, 30, 3, 3, 5, 4, 7,
	5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27,
	15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 2, 43, 2, 45, 2,
	47, 2, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 3, 2, 13, 16, 2, 35, 35, 40,
	40, 44, 47, 49, 49, 61, 64, 96, 97, 126, 126, 174, 174, 217, 217, 249,
	249, 8595, 8595, 8597, 8597, 8712, 8713, 8745, 8746, 6, 2, 38, 38, 65,
	66, 98, 98, 128, 128, 4, 2, 11, 11, 34, 34, 3, 2, 51, 59, 3, 2, 50, 59,
	4, 2, 45, 45, 47, 47, 4, 2, 71, 71, 103, 103, 6, 2, 12, 12, 15, 15, 41,
	41, 94, 94, 6, 2, 12, 12, 15, 15, 36, 36, 94, 94, 4, 2, 67, 92, 99, 124,
	3, 2, 99, 124, 2, 269, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2,
	2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3,
	2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23,
	3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2,
	31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2,
	2, 39, 3, 2, 2, 2, 3, 59, 3, 2, 2, 2, 5, 61, 3, 2, 2, 2, 7, 63, 3, 2, 2,
	2, 9, 65, 3, 2, 2, 2, 11, 67, 3, 2, 2, 2, 13, 69, 3, 2, 2, 2, 15, 71, 3,
	2, 2, 2, 17, 78, 3, 2, 2, 2, 19, 81, 3, 2, 2, 2, 21, 85, 3, 2, 2, 2, 23,
	93, 3, 2, 2, 2, 25, 109, 3, 2, 2, 2, 27, 111, 3, 2, 2, 2, 29, 113, 3, 2,
	2, 2, 31, 115, 3, 2, 2, 2, 33, 117, 3, 2, 2, 2, 35, 119, 3, 2, 2, 2, 37,
	134, 3, 2, 2, 2, 39, 145, 3, 2, 2, 2, 41, 149, 3, 2, 2, 2, 43, 151, 3,
	2, 2, 2, 45, 153, 3, 2, 2, 2, 47, 179, 3, 2, 2, 2, 49, 199, 3, 2, 2, 2,
	51, 202, 3, 2, 2, 2, 53, 232, 3, 2, 2, 2, 55, 238, 3, 2, 2, 2, 57, 242,
	3, 2, 2, 2, 59, 60, 7, 93, 2, 2, 60, 4, 3, 2, 2, 2, 61, 62, 7, 95, 2, 2,
	62, 6, 3, 2, 2, 2, 63, 64, 7, 60, 2, 2, 64, 8, 3, 2, 2, 2, 65, 66, 7, 42,
	2, 2, 66, 10, 3, 2, 2, 2, 67, 68, 7, 43, 2, 2, 68, 12, 3, 2, 2, 2, 69,
	70, 7, 125, 2, 2, 70, 14, 3, 2, 2, 2, 71, 72, 7, 127, 2, 2, 72, 16, 3,
	2, 2, 2, 73, 79, 5, 21, 11, 2, 74, 79, 5, 19, 10, 2, 75, 79, 5, 23, 12,
	2, 76, 79, 5, 27, 14, 2, 77, 79, 5, 29, 15, 2, 78, 73, 3, 2, 2, 2, 78,
	74, 3, 2, 2, 2, 78, 75, 3, 2, 2, 2, 78, 76, 3, 2, 2, 2, 78, 77, 3, 2, 2,
	2, 79, 18, 3, 2, 2, 2, 80, 82, 5, 31, 16, 2, 81, 80, 3, 2, 2, 2, 82, 83,
	3, 2, 2, 2, 83, 81, 3, 2, 2, 2, 83, 84, 3, 2, 2, 2, 84, 20, 3, 2, 2, 2,
	85, 89, 5, 55, 28, 2, 86, 88, 5, 57, 29, 2, 87, 86, 3, 2, 2, 2, 88, 91,
	3, 2, 2, 2, 89, 87, 3, 2, 2, 2, 89, 90, 3, 2, 2, 2, 90, 22, 3, 2, 2, 2,
	91, 89, 3, 2, 2, 2, 92, 94, 5, 45, 23, 2, 93, 92, 3, 2, 2, 2, 93, 94, 3,
	2, 2, 2, 94, 95, 3, 2, 2, 2, 95, 96, 5, 25, 13, 2, 96, 24, 3, 2, 2, 2,
	97, 101, 5, 41, 21, 2, 98, 100, 5, 43, 22, 2, 99, 98, 3, 2, 2, 2, 100,
	103, 3, 2, 2, 2, 101, 99, 3, 2, 2, 2, 101, 102, 3, 2, 2, 2, 102, 110, 3,
	2, 2, 2, 103, 101, 3, 2, 2, 2, 104, 106, 7, 50, 2, 2, 105, 104, 3, 2, 2,
	2, 106, 107, 3, 2, 2, 2, 107, 105, 3, 2, 2, 2, 107, 108, 3, 2, 2, 2, 108,
	110, 3, 2, 2, 2, 109, 97, 3, 2, 2, 2, 109, 105, 3, 2, 2, 2, 110, 26, 3,
	2, 2, 2, 111, 112, 5, 47, 24, 2, 112, 28, 3, 2, 2, 2, 113, 114, 5, 53,
	27, 2, 114, 30, 3, 2, 2, 2, 115, 116, 9, 2, 2, 2, 116, 32, 3, 2, 2, 2,
	117, 118, 9, 3, 2, 2, 118, 34, 3, 2, 2, 2, 119, 120, 7, 49, 2, 2, 120,
	121, 7, 44, 2, 2, 121, 125, 3, 2, 2, 2, 122, 124, 11, 2, 2, 2, 123, 122,
	3, 2, 2, 2, 124, 127, 3, 2, 2, 2, 125, 126, 3, 2, 2, 2, 125, 123, 3, 2,
	2, 2, 126, 128, 3, 2, 2, 2, 127, 125, 3, 2, 2, 2, 128, 129, 7, 44, 2, 2,
	129, 130, 7, 49, 2, 2, 130, 131, 3, 2, 2, 2, 131, 132, 8, 18, 2, 2, 132,
	36, 3, 2, 2, 2, 133, 135, 9, 4, 2, 2, 134, 133, 3, 2, 2, 2, 135, 136, 3,
	2, 2, 2, 136, 134, 3, 2, 2, 2, 136, 137, 3, 2, 2, 2, 137, 138, 3, 2, 2,
	2, 138, 139, 8, 19, 2, 2, 139, 38, 3, 2, 2, 2, 140, 142, 7, 15, 2, 2, 141,
	140, 3, 2, 2, 2, 141, 142, 3, 2, 2, 2, 142, 143, 3, 2, 2, 2, 143, 146,
	7, 12, 2, 2, 144, 146, 7, 15, 2, 2, 145, 141, 3, 2, 2, 2, 145, 144, 3,
	2, 2, 2, 146, 147, 3, 2, 2, 2, 147, 148, 8, 20, 2, 2, 148, 40, 3, 2, 2,
	2, 149, 150, 9, 5, 2, 2, 150, 42, 3, 2, 2, 2, 151, 152, 9, 6, 2, 2, 152,
	44, 3, 2, 2, 2, 153, 154, 9, 7, 2, 2, 154, 46, 3, 2, 2, 2, 155, 157, 5,
	45, 23, 2, 156, 155, 3, 2, 2, 2, 156, 157, 3, 2, 2, 2, 157, 164, 3, 2,
	2, 2, 158, 160, 9, 6, 2, 2, 159, 158, 3, 2, 2, 2, 160, 161, 3, 2, 2, 2,
	161, 159, 3, 2, 2, 2, 161, 162, 3, 2, 2, 2, 162, 165, 3, 2, 2, 2, 163,
	165, 5, 49, 25, 2, 164, 159, 3, 2, 2, 2, 164, 163, 3, 2, 2, 2, 165, 166,
	3, 2, 2, 2, 166, 168, 9, 8, 2, 2, 167, 169, 9, 7, 2, 2, 168, 167, 3, 2,
	2, 2, 168, 169, 3, 2, 2, 2, 169, 171, 3, 2, 2, 2, 170, 172, 9, 6, 2, 2,
	171, 170, 3, 2, 2, 2, 172, 173, 3, 2, 2, 2, 173, 171, 3, 2, 2, 2, 173,
	174, 3, 2, 2, 2, 174, 180, 3, 2, 2, 2, 175, 177, 5, 45, 23, 2, 176, 175,
	3, 2, 2, 2, 176, 177, 3, 2, 2, 2, 177, 178, 3, 2, 2, 2, 178, 180, 5, 49,
	25, 2, 179, 156, 3, 2, 2, 2, 179, 176, 3, 2, 2, 2, 180, 48, 3, 2, 2, 2,
	181, 183, 9, 6, 2, 2, 182, 181, 3, 2, 2, 2, 183, 186, 3, 2, 2, 2, 184,
	182, 3, 2, 2, 2, 184, 185, 3, 2, 2, 2, 185, 187, 3, 2, 2, 2, 186, 184,
	3, 2, 2, 2, 187, 189, 7, 48, 2, 2, 188, 190, 9, 6, 2, 2, 189, 188, 3, 2,
	2, 2, 190, 191, 3, 2, 2, 2, 191, 189, 3, 2, 2, 2, 191, 192, 3, 2, 2, 2,
	192, 200, 3, 2, 2, 2, 193, 195, 9, 6, 2, 2, 194, 193, 3, 2, 2, 2, 195,
	196, 3, 2, 2, 2, 196, 194, 3, 2, 2, 2, 196, 197, 3, 2, 2, 2, 197, 198,
	3, 2, 2, 2, 198, 200, 7, 48, 2, 2, 199, 184, 3, 2, 2, 2, 199, 194, 3, 2,
	2, 2, 200, 50, 3, 2, 2, 2, 201, 203, 7, 15, 2, 2, 202, 201, 3, 2, 2, 2,
	202, 203, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2, 204, 205, 7, 12, 2, 2, 205,
	52, 3, 2, 2, 2, 206, 215, 7, 41, 2, 2, 207, 210, 7, 94, 2, 2, 208, 211,
	5, 51, 26, 2, 209, 211, 11, 2, 2, 2, 210, 208, 3, 2, 2, 2, 210, 209, 3,
	2, 2, 2, 211, 214, 3, 2, 2, 2, 212, 214, 10, 9, 2, 2, 213, 207, 3, 2, 2,
	2, 213, 212, 3, 2, 2, 2, 214, 217, 3, 2, 2, 2, 215, 213, 3, 2, 2, 2, 215,
	216, 3, 2, 2, 2, 216, 218, 3, 2, 2, 2, 217, 215, 3, 2, 2, 2, 218, 233,
	7, 41, 2, 2, 219, 228, 7, 36, 2, 2, 220, 223, 7, 94, 2, 2, 221, 224, 5,
	51, 26, 2, 222, 224, 11, 2, 2, 2, 223, 221, 3, 2, 2, 2, 223, 222, 3, 2,
	2, 2, 224, 227, 3, 2, 2, 2, 225, 227, 10, 10, 2, 2, 226, 220, 3, 2, 2,
	2, 226, 225, 3, 2, 2, 2, 227, 230, 3, 2, 2, 2, 228, 226, 3, 2, 2, 2, 228,
	229, 3, 2, 2, 2, 229, 231, 3, 2, 2, 2, 230, 228, 3, 2, 2, 2, 231, 233,
	7, 36, 2, 2, 232, 206, 3, 2, 2, 2, 232, 219, 3, 2, 2, 2, 233, 54, 3, 2,
	2, 2, 234, 236, 9, 11, 2, 2, 235, 234, 3, 2, 2, 2, 236, 239, 3, 2, 2, 2,
	237, 239, 9, 12, 2, 2, 238, 235, 3, 2, 2, 2, 238, 237, 3, 2, 2, 2, 239,
	56, 3, 2, 2, 2, 240, 243, 5, 55, 28, 2, 241, 243, 7, 48, 2, 2, 242, 240,
	3, 2, 2, 2, 242, 241, 3, 2, 2, 2, 243, 58, 3, 2, 2, 2, 36, 2, 78, 83, 89,
	93, 101, 107, 109, 125, 136, 141, 145, 156, 161, 164, 168, 173, 176, 179,
	184, 191, 196, 199, 202, 210, 213, 215, 223, 226, 228, 232, 235, 238, 242,
	3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "':'", "'('", "')'", "'{'", "'}'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "FUNC_NAME", "OPS", "NAME", "INTEGER",
	"DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING", "OP", "MOD", "BLOCK_COMMENT",
	"WhiteSpace", "NewLine",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "FUNC_NAME", "OPS",
	"NAME", "INTEGER", "DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING", "OP", "MOD",
	"BLOCK_COMMENT", "WhiteSpace", "NewLine", "NON_ZERO_DIGIT", "DIGIT", "SIGN",
	"EXPONENT_OR_POINT_FLOAT", "POINT_FLOAT", "RN", "SHORT_STRING", "ID_START",
	"ID_CONTINUE",
}

type ThreadComputationLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewThreadComputationLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ThreadComputationLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewThreadComputationLexer(input antlr.CharStream) *ThreadComputationLexer {
	l := new(ThreadComputationLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ThreadComputation.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ThreadComputationLexer tokens.
const (
	ThreadComputationLexerT__0            = 1
	ThreadComputationLexerT__1            = 2
	ThreadComputationLexerT__2            = 3
	ThreadComputationLexerT__3            = 4
	ThreadComputationLexerT__4            = 5
	ThreadComputationLexerT__5            = 6
	ThreadComputationLexerT__6            = 7
	ThreadComputationLexerFUNC_NAME       = 8
	ThreadComputationLexerOPS             = 9
	ThreadComputationLexerNAME            = 10
	ThreadComputationLexerINTEGER         = 11
	ThreadComputationLexerDECIMAL_INTEGER = 12
	ThreadComputationLexerFLOAT_NUMBER    = 13
	ThreadComputationLexerSTRING          = 14
	ThreadComputationLexerOP              = 15
	ThreadComputationLexerMOD             = 16
	ThreadComputationLexerBLOCK_COMMENT   = 17
	ThreadComputationLexerWhiteSpace      = 18
	ThreadComputationLexerNewLine         = 19
)
