// Code generated from ThreadComputation.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 23, 253,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 3, 2, 3, 2, 3, 3, 3, 3, 3,
	4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3,
	9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11, 3, 11, 3, 11, 5, 11, 88, 10, 11,
	3, 12, 6, 12, 91, 10, 12, 13, 12, 14, 12, 92, 3, 13, 3, 13, 7, 13, 97,
	10, 13, 12, 13, 14, 13, 100, 11, 13, 3, 14, 5, 14, 103, 10, 14, 3, 14,
	3, 14, 3, 15, 3, 15, 7, 15, 109, 10, 15, 12, 15, 14, 15, 112, 11, 15, 3,
	15, 6, 15, 115, 10, 15, 13, 15, 14, 15, 116, 5, 15, 119, 10, 15, 3, 16,
	3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20, 3, 20, 3,
	20, 7, 20, 133, 10, 20, 12, 20, 14, 20, 136, 11, 20, 3, 20, 3, 20, 3, 20,
	3, 20, 3, 20, 3, 21, 6, 21, 144, 10, 21, 13, 21, 14, 21, 145, 3, 21, 3,
	21, 3, 22, 5, 22, 151, 10, 22, 3, 22, 3, 22, 5, 22, 155, 10, 22, 3, 22,
	3, 22, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 5, 26, 166, 10,
	26, 3, 26, 6, 26, 169, 10, 26, 13, 26, 14, 26, 170, 3, 26, 5, 26, 174,
	10, 26, 3, 26, 3, 26, 5, 26, 178, 10, 26, 3, 26, 6, 26, 181, 10, 26, 13,
	26, 14, 26, 182, 3, 26, 5, 26, 186, 10, 26, 3, 26, 5, 26, 189, 10, 26,
	3, 27, 7, 27, 192, 10, 27, 12, 27, 14, 27, 195, 11, 27, 3, 27, 3, 27, 6,
	27, 199, 10, 27, 13, 27, 14, 27, 200, 3, 27, 6, 27, 204, 10, 27, 13, 27,
	14, 27, 205, 3, 27, 5, 27, 209, 10, 27, 3, 28, 5, 28, 212, 10, 28, 3, 28,
	3, 28, 3, 29, 3, 29, 3, 29, 3, 29, 5, 29, 220, 10, 29, 3, 29, 7, 29, 223,
	10, 29, 12, 29, 14, 29, 226, 11, 29, 3, 29, 3, 29, 3, 29, 3, 29, 3, 29,
	5, 29, 233, 10, 29, 3, 29, 7, 29, 236, 10, 29, 12, 29, 14, 29, 239, 11,
	29, 3, 29, 5, 29, 242, 10, 29, 3, 30, 5, 30, 245, 10, 30, 3, 30, 5, 30,
	248, 10, 30, 3, 31, 3, 31, 5, 31, 252, 10, 31, 3, 134, 2, 32, 3, 3, 5,
	4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25,
	14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43,
	23, 45, 2, 47, 2, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61, 2, 3, 2,
	13, 16, 2, 35, 35, 40, 40, 44, 47, 49, 49, 62, 64, 96, 97, 126, 126, 174,
	174, 217, 217, 249, 249, 8595, 8595, 8597, 8597, 8712, 8713, 8745, 8746,
	8, 2, 38, 38, 65, 66, 98, 98, 128, 128, 8706, 8706, 8730, 8730, 4, 2, 11,
	11, 34, 34, 3, 2, 51, 59, 3, 2, 50, 59, 4, 2, 45, 45, 47, 47, 4, 2, 71,
	71, 103, 103, 6, 2, 12, 12, 15, 15, 41, 41, 94, 94, 6, 2, 12, 12, 15, 15,
	36, 36, 94, 94, 4, 2, 67, 92, 99, 124, 3, 2, 99, 124, 2, 278, 2, 3, 3,
	2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3,
	2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19,
	3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2,
	27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2,
	2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2,
	2, 2, 43, 3, 2, 2, 2, 3, 63, 3, 2, 2, 2, 5, 65, 3, 2, 2, 2, 7, 67, 3, 2,
	2, 2, 9, 70, 3, 2, 2, 2, 11, 72, 3, 2, 2, 2, 13, 74, 3, 2, 2, 2, 15, 76,
	3, 2, 2, 2, 17, 78, 3, 2, 2, 2, 19, 80, 3, 2, 2, 2, 21, 87, 3, 2, 2, 2,
	23, 90, 3, 2, 2, 2, 25, 94, 3, 2, 2, 2, 27, 102, 3, 2, 2, 2, 29, 118, 3,
	2, 2, 2, 31, 120, 3, 2, 2, 2, 33, 122, 3, 2, 2, 2, 35, 124, 3, 2, 2, 2,
	37, 126, 3, 2, 2, 2, 39, 128, 3, 2, 2, 2, 41, 143, 3, 2, 2, 2, 43, 154,
	3, 2, 2, 2, 45, 158, 3, 2, 2, 2, 47, 160, 3, 2, 2, 2, 49, 162, 3, 2, 2,
	2, 51, 188, 3, 2, 2, 2, 53, 208, 3, 2, 2, 2, 55, 211, 3, 2, 2, 2, 57, 241,
	3, 2, 2, 2, 59, 247, 3, 2, 2, 2, 61, 251, 3, 2, 2, 2, 63, 64, 7, 93, 2,
	2, 64, 4, 3, 2, 2, 2, 65, 66, 7, 60, 2, 2, 66, 6, 3, 2, 2, 2, 67, 68, 7,
	61, 2, 2, 68, 69, 7, 61, 2, 2, 69, 8, 3, 2, 2, 2, 70, 71, 7, 95, 2, 2,
	71, 10, 3, 2, 2, 2, 72, 73, 7, 37, 2, 2, 73, 12, 3, 2, 2, 2, 74, 75, 7,
	42, 2, 2, 75, 14, 3, 2, 2, 2, 76, 77, 7, 43, 2, 2, 77, 16, 3, 2, 2, 2,
	78, 79, 7, 125, 2, 2, 79, 18, 3, 2, 2, 2, 80, 81, 7, 127, 2, 2, 81, 20,
	3, 2, 2, 2, 82, 88, 5, 25, 13, 2, 83, 88, 5, 23, 12, 2, 84, 88, 5, 27,
	14, 2, 85, 88, 5, 31, 16, 2, 86, 88, 5, 33, 17, 2, 87, 82, 3, 2, 2, 2,
	87, 83, 3, 2, 2, 2, 87, 84, 3, 2, 2, 2, 87, 85, 3, 2, 2, 2, 87, 86, 3,
	2, 2, 2, 88, 22, 3, 2, 2, 2, 89, 91, 5, 35, 18, 2, 90, 89, 3, 2, 2, 2,
	91, 92, 3, 2, 2, 2, 92, 90, 3, 2, 2, 2, 92, 93, 3, 2, 2, 2, 93, 24, 3,
	2, 2, 2, 94, 98, 5, 59, 30, 2, 95, 97, 5, 61, 31, 2, 96, 95, 3, 2, 2, 2,
	97, 100, 3, 2, 2, 2, 98, 96, 3, 2, 2, 2, 98, 99, 3, 2, 2, 2, 99, 26, 3,
	2, 2, 2, 100, 98, 3, 2, 2, 2, 101, 103, 5, 49, 25, 2, 102, 101, 3, 2, 2,
	2, 102, 103, 3, 2, 2, 2, 103, 104, 3, 2, 2, 2, 104, 105, 5, 29, 15, 2,
	105, 28, 3, 2, 2, 2, 106, 110, 5, 45, 23, 2, 107, 109, 5, 47, 24, 2, 108,
	107, 3, 2, 2, 2, 109, 112, 3, 2, 2, 2, 110, 108, 3, 2, 2, 2, 110, 111,
	3, 2, 2, 2, 111, 119, 3, 2, 2, 2, 112, 110, 3, 2, 2, 2, 113, 115, 7, 50,
	2, 2, 114, 113, 3, 2, 2, 2, 115, 116, 3, 2, 2, 2, 116, 114, 3, 2, 2, 2,
	116, 117, 3, 2, 2, 2, 117, 119, 3, 2, 2, 2, 118, 106, 3, 2, 2, 2, 118,
	114, 3, 2, 2, 2, 119, 30, 3, 2, 2, 2, 120, 121, 5, 51, 26, 2, 121, 32,
	3, 2, 2, 2, 122, 123, 5, 57, 29, 2, 123, 34, 3, 2, 2, 2, 124, 125, 9, 2,
	2, 2, 125, 36, 3, 2, 2, 2, 126, 127, 9, 3, 2, 2, 127, 38, 3, 2, 2, 2, 128,
	129, 7, 49, 2, 2, 129, 130, 7, 44, 2, 2, 130, 134, 3, 2, 2, 2, 131, 133,
	11, 2, 2, 2, 132, 131, 3, 2, 2, 2, 133, 136, 3, 2, 2, 2, 134, 135, 3, 2,
	2, 2, 134, 132, 3, 2, 2, 2, 135, 137, 3, 2, 2, 2, 136, 134, 3, 2, 2, 2,
	137, 138, 7, 44, 2, 2, 138, 139, 7, 49, 2, 2, 139, 140, 3, 2, 2, 2, 140,
	141, 8, 20, 2, 2, 141, 40, 3, 2, 2, 2, 142, 144, 9, 4, 2, 2, 143, 142,
	3, 2, 2, 2, 144, 145, 3, 2, 2, 2, 145, 143, 3, 2, 2, 2, 145, 146, 3, 2,
	2, 2, 146, 147, 3, 2, 2, 2, 147, 148, 8, 21, 2, 2, 148, 42, 3, 2, 2, 2,
	149, 151, 7, 15, 2, 2, 150, 149, 3, 2, 2, 2, 150, 151, 3, 2, 2, 2, 151,
	152, 3, 2, 2, 2, 152, 155, 7, 12, 2, 2, 153, 155, 7, 15, 2, 2, 154, 150,
	3, 2, 2, 2, 154, 153, 3, 2, 2, 2, 155, 156, 3, 2, 2, 2, 156, 157, 8, 22,
	2, 2, 157, 44, 3, 2, 2, 2, 158, 159, 9, 5, 2, 2, 159, 46, 3, 2, 2, 2, 160,
	161, 9, 6, 2, 2, 161, 48, 3, 2, 2, 2, 162, 163, 9, 7, 2, 2, 163, 50, 3,
	2, 2, 2, 164, 166, 5, 49, 25, 2, 165, 164, 3, 2, 2, 2, 165, 166, 3, 2,
	2, 2, 166, 173, 3, 2, 2, 2, 167, 169, 9, 6, 2, 2, 168, 167, 3, 2, 2, 2,
	169, 170, 3, 2, 2, 2, 170, 168, 3, 2, 2, 2, 170, 171, 3, 2, 2, 2, 171,
	174, 3, 2, 2, 2, 172, 174, 5, 53, 27, 2, 173, 168, 3, 2, 2, 2, 173, 172,
	3, 2, 2, 2, 174, 175, 3, 2, 2, 2, 175, 177, 9, 8, 2, 2, 176, 178, 9, 7,
	2, 2, 177, 176, 3, 2, 2, 2, 177, 178, 3, 2, 2, 2, 178, 180, 3, 2, 2, 2,
	179, 181, 9, 6, 2, 2, 180, 179, 3, 2, 2, 2, 181, 182, 3, 2, 2, 2, 182,
	180, 3, 2, 2, 2, 182, 183, 3, 2, 2, 2, 183, 189, 3, 2, 2, 2, 184, 186,
	5, 49, 25, 2, 185, 184, 3, 2, 2, 2, 185, 186, 3, 2, 2, 2, 186, 187, 3,
	2, 2, 2, 187, 189, 5, 53, 27, 2, 188, 165, 3, 2, 2, 2, 188, 185, 3, 2,
	2, 2, 189, 52, 3, 2, 2, 2, 190, 192, 9, 6, 2, 2, 191, 190, 3, 2, 2, 2,
	192, 195, 3, 2, 2, 2, 193, 191, 3, 2, 2, 2, 193, 194, 3, 2, 2, 2, 194,
	196, 3, 2, 2, 2, 195, 193, 3, 2, 2, 2, 196, 198, 7, 48, 2, 2, 197, 199,
	9, 6, 2, 2, 198, 197, 3, 2, 2, 2, 199, 200, 3, 2, 2, 2, 200, 198, 3, 2,
	2, 2, 200, 201, 3, 2, 2, 2, 201, 209, 3, 2, 2, 2, 202, 204, 9, 6, 2, 2,
	203, 202, 3, 2, 2, 2, 204, 205, 3, 2, 2, 2, 205, 203, 3, 2, 2, 2, 205,
	206, 3, 2, 2, 2, 206, 207, 3, 2, 2, 2, 207, 209, 7, 48, 2, 2, 208, 193,
	3, 2, 2, 2, 208, 203, 3, 2, 2, 2, 209, 54, 3, 2, 2, 2, 210, 212, 7, 15,
	2, 2, 211, 210, 3, 2, 2, 2, 211, 212, 3, 2, 2, 2, 212, 213, 3, 2, 2, 2,
	213, 214, 7, 12, 2, 2, 214, 56, 3, 2, 2, 2, 215, 224, 7, 41, 2, 2, 216,
	219, 7, 94, 2, 2, 217, 220, 5, 55, 28, 2, 218, 220, 11, 2, 2, 2, 219, 217,
	3, 2, 2, 2, 219, 218, 3, 2, 2, 2, 220, 223, 3, 2, 2, 2, 221, 223, 10, 9,
	2, 2, 222, 216, 3, 2, 2, 2, 222, 221, 3, 2, 2, 2, 223, 226, 3, 2, 2, 2,
	224, 222, 3, 2, 2, 2, 224, 225, 3, 2, 2, 2, 225, 227, 3, 2, 2, 2, 226,
	224, 3, 2, 2, 2, 227, 242, 7, 41, 2, 2, 228, 237, 7, 36, 2, 2, 229, 232,
	7, 94, 2, 2, 230, 233, 5, 55, 28, 2, 231, 233, 11, 2, 2, 2, 232, 230, 3,
	2, 2, 2, 232, 231, 3, 2, 2, 2, 233, 236, 3, 2, 2, 2, 234, 236, 10, 10,
	2, 2, 235, 229, 3, 2, 2, 2, 235, 234, 3, 2, 2, 2, 236, 239, 3, 2, 2, 2,
	237, 235, 3, 2, 2, 2, 237, 238, 3, 2, 2, 2, 238, 240, 3, 2, 2, 2, 239,
	237, 3, 2, 2, 2, 240, 242, 7, 36, 2, 2, 241, 215, 3, 2, 2, 2, 241, 228,
	3, 2, 2, 2, 242, 58, 3, 2, 2, 2, 243, 245, 9, 11, 2, 2, 244, 243, 3, 2,
	2, 2, 245, 248, 3, 2, 2, 2, 246, 248, 9, 12, 2, 2, 247, 244, 3, 2, 2, 2,
	247, 246, 3, 2, 2, 2, 248, 60, 3, 2, 2, 2, 249, 252, 5, 59, 30, 2, 250,
	252, 7, 48, 2, 2, 251, 249, 3, 2, 2, 2, 251, 250, 3, 2, 2, 2, 252, 62,
	3, 2, 2, 2, 36, 2, 87, 92, 98, 102, 110, 116, 118, 134, 145, 150, 154,
	165, 170, 173, 177, 182, 185, 188, 193, 200, 205, 208, 211, 219, 222, 224,
	232, 235, 237, 241, 244, 247, 251, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "':'", "';;'", "']'", "'#'", "'('", "')'", "'{'", "'}'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "FUNC_NAME", "OPS", "NAME", "INTEGER",
	"DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING", "OP", "MOD", "BLOCK_COMMENT",
	"WhiteSpace", "NewLine",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"FUNC_NAME", "OPS", "NAME", "INTEGER", "DECIMAL_INTEGER", "FLOAT_NUMBER",
	"STRING", "OP", "MOD", "BLOCK_COMMENT", "WhiteSpace", "NewLine", "NON_ZERO_DIGIT",
	"DIGIT", "SIGN", "EXPONENT_OR_POINT_FLOAT", "POINT_FLOAT", "RN", "SHORT_STRING",
	"ID_START", "ID_CONTINUE",
}

type ThreadComputationLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewThreadComputationLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ThreadComputationLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewThreadComputationLexer(input antlr.CharStream) *ThreadComputationLexer {
	l := new(ThreadComputationLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ThreadComputation.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ThreadComputationLexer tokens.
const (
	ThreadComputationLexerT__0            = 1
	ThreadComputationLexerT__1            = 2
	ThreadComputationLexerT__2            = 3
	ThreadComputationLexerT__3            = 4
	ThreadComputationLexerT__4            = 5
	ThreadComputationLexerT__5            = 6
	ThreadComputationLexerT__6            = 7
	ThreadComputationLexerT__7            = 8
	ThreadComputationLexerT__8            = 9
	ThreadComputationLexerFUNC_NAME       = 10
	ThreadComputationLexerOPS             = 11
	ThreadComputationLexerNAME            = 12
	ThreadComputationLexerINTEGER         = 13
	ThreadComputationLexerDECIMAL_INTEGER = 14
	ThreadComputationLexerFLOAT_NUMBER    = 15
	ThreadComputationLexerSTRING          = 16
	ThreadComputationLexerOP              = 17
	ThreadComputationLexerMOD             = 18
	ThreadComputationLexerBLOCK_COMMENT   = 19
	ThreadComputationLexerWhiteSpace      = 20
	ThreadComputationLexerNewLine         = 21
)
