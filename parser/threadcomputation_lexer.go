// Code generated from ThreadComputation.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 22, 248,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 3, 2, 3, 2, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10,
	3, 10, 3, 10, 3, 10, 5, 10, 83, 10, 10, 3, 11, 6, 11, 86, 10, 11, 13, 11,
	14, 11, 87, 3, 12, 3, 12, 7, 12, 92, 10, 12, 12, 12, 14, 12, 95, 11, 12,
	3, 13, 5, 13, 98, 10, 13, 3, 13, 3, 13, 3, 14, 3, 14, 7, 14, 104, 10, 14,
	12, 14, 14, 14, 107, 11, 14, 3, 14, 6, 14, 110, 10, 14, 13, 14, 14, 14,
	111, 5, 14, 114, 10, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18,
	3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 7, 19, 128, 10, 19, 12, 19, 14, 19,
	131, 11, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20, 6, 20, 139, 10,
	20, 13, 20, 14, 20, 140, 3, 20, 3, 20, 3, 21, 5, 21, 146, 10, 21, 3, 21,
	3, 21, 5, 21, 150, 10, 21, 3, 21, 3, 21, 3, 22, 3, 22, 3, 23, 3, 23, 3,
	24, 3, 24, 3, 25, 5, 25, 161, 10, 25, 3, 25, 6, 25, 164, 10, 25, 13, 25,
	14, 25, 165, 3, 25, 5, 25, 169, 10, 25, 3, 25, 3, 25, 5, 25, 173, 10, 25,
	3, 25, 6, 25, 176, 10, 25, 13, 25, 14, 25, 177, 3, 25, 5, 25, 181, 10,
	25, 3, 25, 5, 25, 184, 10, 25, 3, 26, 7, 26, 187, 10, 26, 12, 26, 14, 26,
	190, 11, 26, 3, 26, 3, 26, 6, 26, 194, 10, 26, 13, 26, 14, 26, 195, 3,
	26, 6, 26, 199, 10, 26, 13, 26, 14, 26, 200, 3, 26, 5, 26, 204, 10, 26,
	3, 27, 5, 27, 207, 10, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3, 28, 3, 28, 5,
	28, 215, 10, 28, 3, 28, 7, 28, 218, 10, 28, 12, 28, 14, 28, 221, 11, 28,
	3, 28, 3, 28, 3, 28, 3, 28, 3, 28, 5, 28, 228, 10, 28, 3, 28, 7, 28, 231,
	10, 28, 12, 28, 14, 28, 234, 11, 28, 3, 28, 5, 28, 237, 10, 28, 3, 29,
	5, 29, 240, 10, 29, 3, 29, 5, 29, 243, 10, 29, 3, 30, 3, 30, 5, 30, 247,
	10, 30, 3, 129, 2, 31, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17,
	10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35,
	19, 37, 20, 39, 21, 41, 22, 43, 2, 45, 2, 47, 2, 49, 2, 51, 2, 53, 2, 55,
	2, 57, 2, 59, 2, 3, 2, 14, 16, 2, 35, 35, 40, 40, 44, 47, 49, 49, 61, 64,
	96, 97, 126, 126, 174, 174, 217, 217, 249, 249, 8595, 8595, 8597, 8597,
	8712, 8713, 8745, 8746, 5, 2, 65, 66, 98, 98, 128, 128, 4, 2, 11, 11, 34,
	34, 3, 2, 51, 59, 3, 2, 50, 59, 4, 2, 45, 45, 47, 47, 4, 2, 71, 71, 103,
	103, 6, 2, 12, 12, 15, 15, 41, 41, 94, 94, 6, 2, 12, 12, 15, 15, 36, 36,
	94, 94, 4, 2, 67, 92, 99, 124, 3, 2, 99, 124, 4, 2, 48, 48, 50, 59, 2,
	273, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2,
	2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3,
	2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25,
	3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2,
	33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2,
	2, 41, 3, 2, 2, 2, 3, 61, 3, 2, 2, 2, 5, 63, 3, 2, 2, 2, 7, 65, 3, 2, 2,
	2, 9, 67, 3, 2, 2, 2, 11, 69, 3, 2, 2, 2, 13, 71, 3, 2, 2, 2, 15, 73, 3,
	2, 2, 2, 17, 75, 3, 2, 2, 2, 19, 82, 3, 2, 2, 2, 21, 85, 3, 2, 2, 2, 23,
	89, 3, 2, 2, 2, 25, 97, 3, 2, 2, 2, 27, 113, 3, 2, 2, 2, 29, 115, 3, 2,
	2, 2, 31, 117, 3, 2, 2, 2, 33, 119, 3, 2, 2, 2, 35, 121, 3, 2, 2, 2, 37,
	123, 3, 2, 2, 2, 39, 138, 3, 2, 2, 2, 41, 149, 3, 2, 2, 2, 43, 153, 3,
	2, 2, 2, 45, 155, 3, 2, 2, 2, 47, 157, 3, 2, 2, 2, 49, 183, 3, 2, 2, 2,
	51, 203, 3, 2, 2, 2, 53, 206, 3, 2, 2, 2, 55, 236, 3, 2, 2, 2, 57, 242,
	3, 2, 2, 2, 59, 246, 3, 2, 2, 2, 61, 62, 7, 93, 2, 2, 62, 4, 3, 2, 2, 2,
	63, 64, 7, 95, 2, 2, 64, 6, 3, 2, 2, 2, 65, 66, 7, 38, 2, 2, 66, 8, 3,
	2, 2, 2, 67, 68, 7, 60, 2, 2, 68, 10, 3, 2, 2, 2, 69, 70, 7, 42, 2, 2,
	70, 12, 3, 2, 2, 2, 71, 72, 7, 43, 2, 2, 72, 14, 3, 2, 2, 2, 73, 74, 7,
	125, 2, 2, 74, 16, 3, 2, 2, 2, 75, 76, 7, 127, 2, 2, 76, 18, 3, 2, 2, 2,
	77, 83, 5, 23, 12, 2, 78, 83, 5, 21, 11, 2, 79, 83, 5, 25, 13, 2, 80, 83,
	5, 29, 15, 2, 81, 83, 5, 31, 16, 2, 82, 77, 3, 2, 2, 2, 82, 78, 3, 2, 2,
	2, 82, 79, 3, 2, 2, 2, 82, 80, 3, 2, 2, 2, 82, 81, 3, 2, 2, 2, 83, 20,
	3, 2, 2, 2, 84, 86, 5, 33, 17, 2, 85, 84, 3, 2, 2, 2, 86, 87, 3, 2, 2,
	2, 87, 85, 3, 2, 2, 2, 87, 88, 3, 2, 2, 2, 88, 22, 3, 2, 2, 2, 89, 93,
	5, 57, 29, 2, 90, 92, 5, 59, 30, 2, 91, 90, 3, 2, 2, 2, 92, 95, 3, 2, 2,
	2, 93, 91, 3, 2, 2, 2, 93, 94, 3, 2, 2, 2, 94, 24, 3, 2, 2, 2, 95, 93,
	3, 2, 2, 2, 96, 98, 5, 47, 24, 2, 97, 96, 3, 2, 2, 2, 97, 98, 3, 2, 2,
	2, 98, 99, 3, 2, 2, 2, 99, 100, 5, 27, 14, 2, 100, 26, 3, 2, 2, 2, 101,
	105, 5, 43, 22, 2, 102, 104, 5, 45, 23, 2, 103, 102, 3, 2, 2, 2, 104, 107,
	3, 2, 2, 2, 105, 103, 3, 2, 2, 2, 105, 106, 3, 2, 2, 2, 106, 114, 3, 2,
	2, 2, 107, 105, 3, 2, 2, 2, 108, 110, 7, 50, 2, 2, 109, 108, 3, 2, 2, 2,
	110, 111, 3, 2, 2, 2, 111, 109, 3, 2, 2, 2, 111, 112, 3, 2, 2, 2, 112,
	114, 3, 2, 2, 2, 113, 101, 3, 2, 2, 2, 113, 109, 3, 2, 2, 2, 114, 28, 3,
	2, 2, 2, 115, 116, 5, 49, 25, 2, 116, 30, 3, 2, 2, 2, 117, 118, 5, 55,
	28, 2, 118, 32, 3, 2, 2, 2, 119, 120, 9, 2, 2, 2, 120, 34, 3, 2, 2, 2,
	121, 122, 9, 3, 2, 2, 122, 36, 3, 2, 2, 2, 123, 124, 7, 49, 2, 2, 124,
	125, 7, 44, 2, 2, 125, 129, 3, 2, 2, 2, 126, 128, 11, 2, 2, 2, 127, 126,
	3, 2, 2, 2, 128, 131, 3, 2, 2, 2, 129, 130, 3, 2, 2, 2, 129, 127, 3, 2,
	2, 2, 130, 132, 3, 2, 2, 2, 131, 129, 3, 2, 2, 2, 132, 133, 7, 44, 2, 2,
	133, 134, 7, 49, 2, 2, 134, 135, 3, 2, 2, 2, 135, 136, 8, 19, 2, 2, 136,
	38, 3, 2, 2, 2, 137, 139, 9, 4, 2, 2, 138, 137, 3, 2, 2, 2, 139, 140, 3,
	2, 2, 2, 140, 138, 3, 2, 2, 2, 140, 141, 3, 2, 2, 2, 141, 142, 3, 2, 2,
	2, 142, 143, 8, 20, 2, 2, 143, 40, 3, 2, 2, 2, 144, 146, 7, 15, 2, 2, 145,
	144, 3, 2, 2, 2, 145, 146, 3, 2, 2, 2, 146, 147, 3, 2, 2, 2, 147, 150,
	7, 12, 2, 2, 148, 150, 7, 15, 2, 2, 149, 145, 3, 2, 2, 2, 149, 148, 3,
	2, 2, 2, 150, 151, 3, 2, 2, 2, 151, 152, 8, 21, 2, 2, 152, 42, 3, 2, 2,
	2, 153, 154, 9, 5, 2, 2, 154, 44, 3, 2, 2, 2, 155, 156, 9, 6, 2, 2, 156,
	46, 3, 2, 2, 2, 157, 158, 9, 7, 2, 2, 158, 48, 3, 2, 2, 2, 159, 161, 5,
	47, 24, 2, 160, 159, 3, 2, 2, 2, 160, 161, 3, 2, 2, 2, 161, 168, 3, 2,
	2, 2, 162, 164, 9, 6, 2, 2, 163, 162, 3, 2, 2, 2, 164, 165, 3, 2, 2, 2,
	165, 163, 3, 2, 2, 2, 165, 166, 3, 2, 2, 2, 166, 169, 3, 2, 2, 2, 167,
	169, 5, 51, 26, 2, 168, 163, 3, 2, 2, 2, 168, 167, 3, 2, 2, 2, 169, 170,
	3, 2, 2, 2, 170, 172, 9, 8, 2, 2, 171, 173, 9, 7, 2, 2, 172, 171, 3, 2,
	2, 2, 172, 173, 3, 2, 2, 2, 173, 175, 3, 2, 2, 2, 174, 176, 9, 6, 2, 2,
	175, 174, 3, 2, 2, 2, 176, 177, 3, 2, 2, 2, 177, 175, 3, 2, 2, 2, 177,
	178, 3, 2, 2, 2, 178, 184, 3, 2, 2, 2, 179, 181, 5, 47, 24, 2, 180, 179,
	3, 2, 2, 2, 180, 181, 3, 2, 2, 2, 181, 182, 3, 2, 2, 2, 182, 184, 5, 51,
	26, 2, 183, 160, 3, 2, 2, 2, 183, 180, 3, 2, 2, 2, 184, 50, 3, 2, 2, 2,
	185, 187, 9, 6, 2, 2, 186, 185, 3, 2, 2, 2, 187, 190, 3, 2, 2, 2, 188,
	186, 3, 2, 2, 2, 188, 189, 3, 2, 2, 2, 189, 191, 3, 2, 2, 2, 190, 188,
	3, 2, 2, 2, 191, 193, 7, 48, 2, 2, 192, 194, 9, 6, 2, 2, 193, 192, 3, 2,
	2, 2, 194, 195, 3, 2, 2, 2, 195, 193, 3, 2, 2, 2, 195, 196, 3, 2, 2, 2,
	196, 204, 3, 2, 2, 2, 197, 199, 9, 6, 2, 2, 198, 197, 3, 2, 2, 2, 199,
	200, 3, 2, 2, 2, 200, 198, 3, 2, 2, 2, 200, 201, 3, 2, 2, 2, 201, 202,
	3, 2, 2, 2, 202, 204, 7, 48, 2, 2, 203, 188, 3, 2, 2, 2, 203, 198, 3, 2,
	2, 2, 204, 52, 3, 2, 2, 2, 205, 207, 7, 15, 2, 2, 206, 205, 3, 2, 2, 2,
	206, 207, 3, 2, 2, 2, 207, 208, 3, 2, 2, 2, 208, 209, 7, 12, 2, 2, 209,
	54, 3, 2, 2, 2, 210, 219, 7, 41, 2, 2, 211, 214, 7, 94, 2, 2, 212, 215,
	5, 53, 27, 2, 213, 215, 11, 2, 2, 2, 214, 212, 3, 2, 2, 2, 214, 213, 3,
	2, 2, 2, 215, 218, 3, 2, 2, 2, 216, 218, 10, 9, 2, 2, 217, 211, 3, 2, 2,
	2, 217, 216, 3, 2, 2, 2, 218, 221, 3, 2, 2, 2, 219, 217, 3, 2, 2, 2, 219,
	220, 3, 2, 2, 2, 220, 222, 3, 2, 2, 2, 221, 219, 3, 2, 2, 2, 222, 237,
	7, 41, 2, 2, 223, 232, 7, 36, 2, 2, 224, 227, 7, 94, 2, 2, 225, 228, 5,
	53, 27, 2, 226, 228, 11, 2, 2, 2, 227, 225, 3, 2, 2, 2, 227, 226, 3, 2,
	2, 2, 228, 231, 3, 2, 2, 2, 229, 231, 10, 10, 2, 2, 230, 224, 3, 2, 2,
	2, 230, 229, 3, 2, 2, 2, 231, 234, 3, 2, 2, 2, 232, 230, 3, 2, 2, 2, 232,
	233, 3, 2, 2, 2, 233, 235, 3, 2, 2, 2, 234, 232, 3, 2, 2, 2, 235, 237,
	7, 36, 2, 2, 236, 210, 3, 2, 2, 2, 236, 223, 3, 2, 2, 2, 237, 56, 3, 2,
	2, 2, 238, 240, 9, 11, 2, 2, 239, 238, 3, 2, 2, 2, 240, 243, 3, 2, 2, 2,
	241, 243, 9, 12, 2, 2, 242, 239, 3, 2, 2, 2, 242, 241, 3, 2, 2, 2, 243,
	58, 3, 2, 2, 2, 244, 247, 5, 57, 29, 2, 245, 247, 9, 13, 2, 2, 246, 244,
	3, 2, 2, 2, 246, 245, 3, 2, 2, 2, 247, 60, 3, 2, 2, 2, 36, 2, 82, 87, 93,
	97, 105, 111, 113, 129, 140, 145, 149, 160, 165, 168, 172, 177, 180, 183,
	188, 195, 200, 203, 206, 214, 217, 219, 227, 230, 232, 236, 239, 242, 246,
	3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'$'", "':'", "'('", "')'", "'{'", "'}'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "FUNC_NAME", "OPS", "NAME", "INTEGER",
	"DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING", "OP", "MOD", "BLOCK_COMMENT",
	"WhiteSpace", "NewLine",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "FUNC_NAME",
	"OPS", "NAME", "INTEGER", "DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING",
	"OP", "MOD", "BLOCK_COMMENT", "WhiteSpace", "NewLine", "NON_ZERO_DIGIT",
	"DIGIT", "SIGN", "EXPONENT_OR_POINT_FLOAT", "POINT_FLOAT", "RN", "SHORT_STRING",
	"ID_START", "ID_CONTINUE",
}

type ThreadComputationLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewThreadComputationLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ThreadComputationLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewThreadComputationLexer(input antlr.CharStream) *ThreadComputationLexer {
	l := new(ThreadComputationLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ThreadComputation.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ThreadComputationLexer tokens.
const (
	ThreadComputationLexerT__0            = 1
	ThreadComputationLexerT__1            = 2
	ThreadComputationLexerT__2            = 3
	ThreadComputationLexerT__3            = 4
	ThreadComputationLexerT__4            = 5
	ThreadComputationLexerT__5            = 6
	ThreadComputationLexerT__6            = 7
	ThreadComputationLexerT__7            = 8
	ThreadComputationLexerFUNC_NAME       = 9
	ThreadComputationLexerOPS             = 10
	ThreadComputationLexerNAME            = 11
	ThreadComputationLexerINTEGER         = 12
	ThreadComputationLexerDECIMAL_INTEGER = 13
	ThreadComputationLexerFLOAT_NUMBER    = 14
	ThreadComputationLexerSTRING          = 15
	ThreadComputationLexerOP              = 16
	ThreadComputationLexerMOD             = 17
	ThreadComputationLexerBLOCK_COMMENT   = 18
	ThreadComputationLexerWhiteSpace      = 19
	ThreadComputationLexerNewLine         = 20
)
