// Code generated from ThreadComputation.g4 by ANTLR 4.9.3. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 24, 287,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 3, 2, 3, 2,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 8, 3, 8,
	3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 5, 11, 85, 10, 11, 3, 11, 6, 11, 88, 10,
	11, 13, 11, 14, 11, 89, 3, 12, 3, 12, 3, 13, 3, 13, 7, 13, 96, 10, 13,
	12, 13, 14, 13, 99, 11, 13, 3, 14, 5, 14, 102, 10, 14, 3, 14, 3, 14, 3,
	15, 3, 15, 7, 15, 108, 10, 15, 12, 15, 14, 15, 111, 11, 15, 3, 15, 6, 15,
	114, 10, 15, 13, 15, 14, 15, 115, 5, 15, 118, 10, 15, 3, 16, 3, 16, 3,
	17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19,
	3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 5, 19, 141, 10,
	19, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 5, 20, 161, 10,
	20, 3, 21, 3, 21, 3, 21, 3, 21, 7, 21, 167, 10, 21, 12, 21, 14, 21, 170,
	11, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 21, 3, 22, 6, 22, 178, 10, 22, 13,
	22, 14, 22, 179, 3, 22, 3, 22, 3, 23, 5, 23, 185, 10, 23, 3, 23, 3, 23,
	5, 23, 189, 10, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 25, 3, 25, 3, 26, 3,
	26, 3, 27, 5, 27, 200, 10, 27, 3, 27, 6, 27, 203, 10, 27, 13, 27, 14, 27,
	204, 3, 27, 5, 27, 208, 10, 27, 3, 27, 3, 27, 5, 27, 212, 10, 27, 3, 27,
	6, 27, 215, 10, 27, 13, 27, 14, 27, 216, 3, 27, 5, 27, 220, 10, 27, 3,
	27, 5, 27, 223, 10, 27, 3, 28, 7, 28, 226, 10, 28, 12, 28, 14, 28, 229,
	11, 28, 3, 28, 3, 28, 6, 28, 233, 10, 28, 13, 28, 14, 28, 234, 3, 28, 6,
	28, 238, 10, 28, 13, 28, 14, 28, 239, 3, 28, 5, 28, 243, 10, 28, 3, 29,
	5, 29, 246, 10, 29, 3, 29, 3, 29, 3, 30, 3, 30, 3, 30, 3, 30, 5, 30, 254,
	10, 30, 3, 30, 7, 30, 257, 10, 30, 12, 30, 14, 30, 260, 11, 30, 3, 30,
	3, 30, 3, 30, 3, 30, 3, 30, 5, 30, 267, 10, 30, 3, 30, 7, 30, 270, 10,
	30, 12, 30, 14, 30, 273, 11, 30, 3, 30, 5, 30, 276, 10, 30, 3, 31, 5, 31,
	279, 10, 31, 3, 31, 5, 31, 282, 10, 31, 3, 32, 3, 32, 5, 32, 286, 10, 32,
	3, 168, 2, 33, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19,
	11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17, 33, 18, 35, 19, 37,
	20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 2, 49, 2, 51, 2, 53, 2, 55, 2,
	57, 2, 59, 2, 61, 2, 63, 2, 3, 2, 14, 4, 2, 65, 65, 98, 98, 17, 2, 35,
	35, 40, 40, 44, 47, 49, 49, 61, 64, 96, 97, 126, 126, 128, 128, 174, 174,
	217, 217, 249, 249, 8595, 8595, 8597, 8597, 8712, 8713, 8745, 8746, 4,
	2, 11, 11, 34, 34, 3, 2, 51, 59, 3, 2, 50, 59, 4, 2, 45, 45, 47, 47, 4,
	2, 71, 71, 103, 103, 6, 2, 12, 12, 15, 15, 41, 41, 94, 94, 6, 2, 12, 12,
	15, 15, 36, 36, 94, 94, 4, 2, 67, 92, 99, 124, 4, 2, 65, 65, 98, 124, 4,
	2, 48, 48, 50, 59, 2, 313, 2, 3, 3, 2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3,
	2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3, 2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15,
	3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19, 3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2,
	23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2, 27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2,
	2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2, 2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2,
	2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2, 2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2,
	2, 2, 3, 65, 3, 2, 2, 2, 5, 67, 3, 2, 2, 2, 7, 69, 3, 2, 2, 2, 9, 71, 3,
	2, 2, 2, 11, 73, 3, 2, 2, 2, 13, 75, 3, 2, 2, 2, 15, 77, 3, 2, 2, 2, 17,
	79, 3, 2, 2, 2, 19, 81, 3, 2, 2, 2, 21, 84, 3, 2, 2, 2, 23, 91, 3, 2, 2,
	2, 25, 93, 3, 2, 2, 2, 27, 101, 3, 2, 2, 2, 29, 117, 3, 2, 2, 2, 31, 119,
	3, 2, 2, 2, 33, 121, 3, 2, 2, 2, 35, 123, 3, 2, 2, 2, 37, 140, 3, 2, 2,
	2, 39, 160, 3, 2, 2, 2, 41, 162, 3, 2, 2, 2, 43, 177, 3, 2, 2, 2, 45, 188,
	3, 2, 2, 2, 47, 192, 3, 2, 2, 2, 49, 194, 3, 2, 2, 2, 51, 196, 3, 2, 2,
	2, 53, 222, 3, 2, 2, 2, 55, 242, 3, 2, 2, 2, 57, 245, 3, 2, 2, 2, 59, 275,
	3, 2, 2, 2, 61, 281, 3, 2, 2, 2, 63, 285, 3, 2, 2, 2, 65, 66, 7, 93, 2,
	2, 66, 4, 3, 2, 2, 2, 67, 68, 7, 95, 2, 2, 68, 6, 3, 2, 2, 2, 69, 70, 7,
	66, 2, 2, 70, 8, 3, 2, 2, 2, 71, 72, 7, 38, 2, 2, 72, 10, 3, 2, 2, 2, 73,
	74, 7, 42, 2, 2, 74, 12, 3, 2, 2, 2, 75, 76, 7, 43, 2, 2, 76, 14, 3, 2,
	2, 2, 77, 78, 7, 125, 2, 2, 78, 16, 3, 2, 2, 2, 79, 80, 7, 127, 2, 2, 80,
	18, 3, 2, 2, 2, 81, 82, 7, 60, 2, 2, 82, 20, 3, 2, 2, 2, 83, 85, 5, 23,
	12, 2, 84, 83, 3, 2, 2, 2, 84, 85, 3, 2, 2, 2, 85, 87, 3, 2, 2, 2, 86,
	88, 5, 35, 18, 2, 87, 86, 3, 2, 2, 2, 88, 89, 3, 2, 2, 2, 89, 87, 3, 2,
	2, 2, 89, 90, 3, 2, 2, 2, 90, 22, 3, 2, 2, 2, 91, 92, 9, 2, 2, 2, 92, 24,
	3, 2, 2, 2, 93, 97, 5, 61, 31, 2, 94, 96, 5, 63, 32, 2, 95, 94, 3, 2, 2,
	2, 96, 99, 3, 2, 2, 2, 97, 95, 3, 2, 2, 2, 97, 98, 3, 2, 2, 2, 98, 26,
	3, 2, 2, 2, 99, 97, 3, 2, 2, 2, 100, 102, 5, 51, 26, 2, 101, 100, 3, 2,
	2, 2, 101, 102, 3, 2, 2, 2, 102, 103, 3, 2, 2, 2, 103, 104, 5, 29, 15,
	2, 104, 28, 3, 2, 2, 2, 105, 109, 5, 47, 24, 2, 106, 108, 5, 49, 25, 2,
	107, 106, 3, 2, 2, 2, 108, 111, 3, 2, 2, 2, 109, 107, 3, 2, 2, 2, 109,
	110, 3, 2, 2, 2, 110, 118, 3, 2, 2, 2, 111, 109, 3, 2, 2, 2, 112, 114,
	7, 50, 2, 2, 113, 112, 3, 2, 2, 2, 114, 115, 3, 2, 2, 2, 115, 113, 3, 2,
	2, 2, 115, 116, 3, 2, 2, 2, 116, 118, 3, 2, 2, 2, 117, 105, 3, 2, 2, 2,
	117, 113, 3, 2, 2, 2, 118, 30, 3, 2, 2, 2, 119, 120, 5, 53, 27, 2, 120,
	32, 3, 2, 2, 2, 121, 122, 5, 59, 30, 2, 122, 34, 3, 2, 2, 2, 123, 124,
	9, 3, 2, 2, 124, 36, 3, 2, 2, 2, 125, 126, 7, 37, 2, 2, 126, 127, 7, 118,
	2, 2, 127, 128, 7, 116, 2, 2, 128, 129, 7, 119, 2, 2, 129, 141, 7, 103,
	2, 2, 130, 131, 7, 37, 2, 2, 131, 132, 7, 86, 2, 2, 132, 133, 7, 116, 2,
	2, 133, 134, 7, 119, 2, 2, 134, 141, 7, 103, 2, 2, 135, 136, 7, 37, 2,
	2, 136, 137, 7, 86, 2, 2, 137, 138, 7, 84, 2, 2, 138, 139, 7, 87, 2, 2,
	139, 141, 7, 71, 2, 2, 140, 125, 3, 2, 2, 2, 140, 130, 3, 2, 2, 2, 140,
	135, 3, 2, 2, 2, 141, 38, 3, 2, 2, 2, 142, 143, 7, 37, 2, 2, 143, 144,
	7, 104, 2, 2, 144, 145, 7, 99, 2, 2, 145, 146, 7, 110, 2, 2, 146, 147,
	7, 117, 2, 2, 147, 161, 7, 103, 2, 2, 148, 149, 7, 37, 2, 2, 149, 150,
	7, 72, 2, 2, 150, 151, 7, 99, 2, 2, 151, 152, 7, 110, 2, 2, 152, 153, 7,
	117, 2, 2, 153, 161, 7, 103, 2, 2, 154, 155, 7, 37, 2, 2, 155, 156, 7,
	72, 2, 2, 156, 157, 7, 67, 2, 2, 157, 158, 7, 78, 2, 2, 158, 159, 7, 85,
	2, 2, 159, 161, 7, 71, 2, 2, 160, 142, 3, 2, 2, 2, 160, 148, 3, 2, 2, 2,
	160, 154, 3, 2, 2, 2, 161, 40, 3, 2, 2, 2, 162, 163, 7, 49, 2, 2, 163,
	164, 7, 44, 2, 2, 164, 168, 3, 2, 2, 2, 165, 167, 11, 2, 2, 2, 166, 165,
	3, 2, 2, 2, 167, 170, 3, 2, 2, 2, 168, 169, 3, 2, 2, 2, 168, 166, 3, 2,
	2, 2, 169, 171, 3, 2, 2, 2, 170, 168, 3, 2, 2, 2, 171, 172, 7, 44, 2, 2,
	172, 173, 7, 49, 2, 2, 173, 174, 3, 2, 2, 2, 174, 175, 8, 21, 2, 2, 175,
	42, 3, 2, 2, 2, 176, 178, 9, 4, 2, 2, 177, 176, 3, 2, 2, 2, 178, 179, 3,
	2, 2, 2, 179, 177, 3, 2, 2, 2, 179, 180, 3, 2, 2, 2, 180, 181, 3, 2, 2,
	2, 181, 182, 8, 22, 2, 2, 182, 44, 3, 2, 2, 2, 183, 185, 7, 15, 2, 2, 184,
	183, 3, 2, 2, 2, 184, 185, 3, 2, 2, 2, 185, 186, 3, 2, 2, 2, 186, 189,
	7, 12, 2, 2, 187, 189, 7, 15, 2, 2, 188, 184, 3, 2, 2, 2, 188, 187, 3,
	2, 2, 2, 189, 190, 3, 2, 2, 2, 190, 191, 8, 23, 2, 2, 191, 46, 3, 2, 2,
	2, 192, 193, 9, 5, 2, 2, 193, 48, 3, 2, 2, 2, 194, 195, 9, 6, 2, 2, 195,
	50, 3, 2, 2, 2, 196, 197, 9, 7, 2, 2, 197, 52, 3, 2, 2, 2, 198, 200, 5,
	51, 26, 2, 199, 198, 3, 2, 2, 2, 199, 200, 3, 2, 2, 2, 200, 207, 3, 2,
	2, 2, 201, 203, 9, 6, 2, 2, 202, 201, 3, 2, 2, 2, 203, 204, 3, 2, 2, 2,
	204, 202, 3, 2, 2, 2, 204, 205, 3, 2, 2, 2, 205, 208, 3, 2, 2, 2, 206,
	208, 5, 55, 28, 2, 207, 202, 3, 2, 2, 2, 207, 206, 3, 2, 2, 2, 208, 209,
	3, 2, 2, 2, 209, 211, 9, 8, 2, 2, 210, 212, 9, 7, 2, 2, 211, 210, 3, 2,
	2, 2, 211, 212, 3, 2, 2, 2, 212, 214, 3, 2, 2, 2, 213, 215, 9, 6, 2, 2,
	214, 213, 3, 2, 2, 2, 215, 216, 3, 2, 2, 2, 216, 214, 3, 2, 2, 2, 216,
	217, 3, 2, 2, 2, 217, 223, 3, 2, 2, 2, 218, 220, 5, 51, 26, 2, 219, 218,
	3, 2, 2, 2, 219, 220, 3, 2, 2, 2, 220, 221, 3, 2, 2, 2, 221, 223, 5, 55,
	28, 2, 222, 199, 3, 2, 2, 2, 222, 219, 3, 2, 2, 2, 223, 54, 3, 2, 2, 2,
	224, 226, 9, 6, 2, 2, 225, 224, 3, 2, 2, 2, 226, 229, 3, 2, 2, 2, 227,
	225, 3, 2, 2, 2, 227, 228, 3, 2, 2, 2, 228, 230, 3, 2, 2, 2, 229, 227,
	3, 2, 2, 2, 230, 232, 7, 48, 2, 2, 231, 233, 9, 6, 2, 2, 232, 231, 3, 2,
	2, 2, 233, 234, 3, 2, 2, 2, 234, 232, 3, 2, 2, 2, 234, 235, 3, 2, 2, 2,
	235, 243, 3, 2, 2, 2, 236, 238, 9, 6, 2, 2, 237, 236, 3, 2, 2, 2, 238,
	239, 3, 2, 2, 2, 239, 237, 3, 2, 2, 2, 239, 240, 3, 2, 2, 2, 240, 241,
	3, 2, 2, 2, 241, 243, 7, 48, 2, 2, 242, 227, 3, 2, 2, 2, 242, 237, 3, 2,
	2, 2, 243, 56, 3, 2, 2, 2, 244, 246, 7, 15, 2, 2, 245, 244, 3, 2, 2, 2,
	245, 246, 3, 2, 2, 2, 246, 247, 3, 2, 2, 2, 247, 248, 7, 12, 2, 2, 248,
	58, 3, 2, 2, 2, 249, 258, 7, 41, 2, 2, 250, 253, 7, 94, 2, 2, 251, 254,
	5, 57, 29, 2, 252, 254, 11, 2, 2, 2, 253, 251, 3, 2, 2, 2, 253, 252, 3,
	2, 2, 2, 254, 257, 3, 2, 2, 2, 255, 257, 10, 9, 2, 2, 256, 250, 3, 2, 2,
	2, 256, 255, 3, 2, 2, 2, 257, 260, 3, 2, 2, 2, 258, 256, 3, 2, 2, 2, 258,
	259, 3, 2, 2, 2, 259, 261, 3, 2, 2, 2, 260, 258, 3, 2, 2, 2, 261, 276,
	7, 41, 2, 2, 262, 271, 7, 36, 2, 2, 263, 266, 7, 94, 2, 2, 264, 267, 5,
	57, 29, 2, 265, 267, 11, 2, 2, 2, 266, 264, 3, 2, 2, 2, 266, 265, 3, 2,
	2, 2, 267, 270, 3, 2, 2, 2, 268, 270, 10, 10, 2, 2, 269, 263, 3, 2, 2,
	2, 269, 268, 3, 2, 2, 2, 270, 273, 3, 2, 2, 2, 271, 269, 3, 2, 2, 2, 271,
	272, 3, 2, 2, 2, 272, 274, 3, 2, 2, 2, 273, 271, 3, 2, 2, 2, 274, 276,
	7, 36, 2, 2, 275, 249, 3, 2, 2, 2, 275, 262, 3, 2, 2, 2, 276, 60, 3, 2,
	2, 2, 277, 279, 9, 11, 2, 2, 278, 277, 3, 2, 2, 2, 279, 282, 3, 2, 2, 2,
	280, 282, 9, 12, 2, 2, 281, 278, 3, 2, 2, 2, 281, 280, 3, 2, 2, 2, 282,
	62, 3, 2, 2, 2, 283, 286, 5, 61, 31, 2, 284, 286, 9, 13, 2, 2, 285, 283,
	3, 2, 2, 2, 285, 284, 3, 2, 2, 2, 286, 64, 3, 2, 2, 2, 38, 2, 84, 89, 97,
	101, 109, 115, 117, 140, 160, 168, 179, 184, 188, 199, 204, 207, 211, 216,
	219, 222, 227, 234, 239, 242, 245, 253, 256, 258, 266, 269, 271, 275, 278,
	281, 285, 3, 8, 2, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "'['", "']'", "'@'", "'$'", "'('", "')'", "'{'", "'}'", "':'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "OPS", "OPS_START", "NAME", "INTEGER",
	"DECIMAL_INTEGER", "FLOAT_NUMBER", "STRING", "OP", "TRUE", "FALSE", "BLOCK_COMMENT",
	"WhiteSpace", "NewLine",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"OPS", "OPS_START", "NAME", "INTEGER", "DECIMAL_INTEGER", "FLOAT_NUMBER",
	"STRING", "OP", "TRUE", "FALSE", "BLOCK_COMMENT", "WhiteSpace", "NewLine",
	"NON_ZERO_DIGIT", "DIGIT", "SIGN", "EXPONENT_OR_POINT_FLOAT", "POINT_FLOAT",
	"RN", "SHORT_STRING", "ID_START", "ID_CONTINUE",
}

type ThreadComputationLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewThreadComputationLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *ThreadComputationLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewThreadComputationLexer(input antlr.CharStream) *ThreadComputationLexer {
	l := new(ThreadComputationLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "ThreadComputation.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// ThreadComputationLexer tokens.
const (
	ThreadComputationLexerT__0            = 1
	ThreadComputationLexerT__1            = 2
	ThreadComputationLexerT__2            = 3
	ThreadComputationLexerT__3            = 4
	ThreadComputationLexerT__4            = 5
	ThreadComputationLexerT__5            = 6
	ThreadComputationLexerT__6            = 7
	ThreadComputationLexerT__7            = 8
	ThreadComputationLexerT__8            = 9
	ThreadComputationLexerOPS             = 10
	ThreadComputationLexerOPS_START       = 11
	ThreadComputationLexerNAME            = 12
	ThreadComputationLexerINTEGER         = 13
	ThreadComputationLexerDECIMAL_INTEGER = 14
	ThreadComputationLexerFLOAT_NUMBER    = 15
	ThreadComputationLexerSTRING          = 16
	ThreadComputationLexerOP              = 17
	ThreadComputationLexerTRUE            = 18
	ThreadComputationLexerFALSE           = 19
	ThreadComputationLexerBLOCK_COMMENT   = 20
	ThreadComputationLexerWhiteSpace      = 21
	ThreadComputationLexerNewLine         = 22
)
